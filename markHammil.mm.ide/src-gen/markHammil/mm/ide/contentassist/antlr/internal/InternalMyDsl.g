/*
 * generated by Xtext 2.12.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package markHammil.mm.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package markHammil.mm.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import markHammil.mm.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFile
entryRuleFile
:
{ before(grammarAccess.getFileRule()); }
	 ruleFile
{ after(grammarAccess.getFileRule()); } 
	 EOF 
;

// Rule File
ruleFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileAccess().getGroup()); }
		(rule__File__Group__0)
		{ after(grammarAccess.getFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBreakLineExpression
entryRuleBreakLineExpression
:
{ before(grammarAccess.getBreakLineExpressionRule()); }
	 ruleBreakLineExpression
{ after(grammarAccess.getBreakLineExpressionRule()); } 
	 EOF 
;

// Rule BreakLineExpression
ruleBreakLineExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakLineExpressionAccess().getGroup()); }
		(rule__BreakLineExpression__Group__0)
		{ after(grammarAccess.getBreakLineExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextExpression
entryRuleTextExpression
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTextExpressionRule()); }
	 ruleTextExpression
{ after(grammarAccess.getTextExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TextExpression
ruleTextExpression 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextExpressionAccess().getAlternatives()); }
		(rule__TextExpression__Alternatives)
		{ after(grammarAccess.getTextExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleListExpression
entryRuleListExpression
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getListExpressionRule()); }
	 ruleListExpression
{ after(grammarAccess.getListExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ListExpression
ruleListExpression 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListExpressionAccess().getAlternatives()); }
		(rule__ListExpression__Alternatives)
		{ after(grammarAccess.getListExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleQuoteExpression
entryRuleQuoteExpression
:
{ before(grammarAccess.getQuoteExpressionRule()); }
	 ruleQuoteExpression
{ after(grammarAccess.getQuoteExpressionRule()); } 
	 EOF 
;

// Rule QuoteExpression
ruleQuoteExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuoteExpressionAccess().getGroup()); }
		(rule__QuoteExpression__Group__0)
		{ after(grammarAccess.getQuoteExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefExpression
entryRuleRefExpression
:
{ before(grammarAccess.getRefExpressionRule()); }
	 ruleRefExpression
{ after(grammarAccess.getRefExpressionRule()); } 
	 EOF 
;

// Rule RefExpression
ruleRefExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefExpressionAccess().getGroup()); }
		(rule__RefExpression__Group__0)
		{ after(grammarAccess.getRefExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinkExpression
entryRuleLinkExpression
:
{ before(grammarAccess.getLinkExpressionRule()); }
	 ruleLinkExpression
{ after(grammarAccess.getLinkExpressionRule()); } 
	 EOF 
;

// Rule LinkExpression
ruleLinkExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getAlternatives()); }
		(rule__LinkExpression__Alternatives)
		{ after(grammarAccess.getLinkExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImageExpression
entryRuleImageExpression
:
{ before(grammarAccess.getImageExpressionRule()); }
	 ruleImageExpression
{ after(grammarAccess.getImageExpressionRule()); } 
	 EOF 
;

// Rule ImageExpression
ruleImageExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImageExpressionAccess().getGroup()); }
		(rule__ImageExpression__Group__0)
		{ after(grammarAccess.getImageExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVideoExpression
entryRuleVideoExpression
:
{ before(grammarAccess.getVideoExpressionRule()); }
	 ruleVideoExpression
{ after(grammarAccess.getVideoExpressionRule()); } 
	 EOF 
;

// Rule VideoExpression
ruleVideoExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVideoExpressionAccess().getGroup()); }
		(rule__VideoExpression__Group__0)
		{ after(grammarAccess.getVideoExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTabExpression
entryRuleTabExpression
:
{ before(grammarAccess.getTabExpressionRule()); }
	 ruleTabExpression
{ after(grammarAccess.getTabExpressionRule()); } 
	 EOF 
;

// Rule TabExpression
ruleTabExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTabExpressionAccess().getGroup()); }
		(rule__TabExpression__Group__0)
		{ after(grammarAccess.getTabExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTabSeparation
entryRuleTabSeparation
:
{ before(grammarAccess.getTabSeparationRule()); }
	 ruleTabSeparation
{ after(grammarAccess.getTabSeparationRule()); } 
	 EOF 
;

// Rule TabSeparation
ruleTabSeparation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTabSeparationAccess().getGroup()); }
		(rule__TabSeparation__Group__0)
		{ after(grammarAccess.getTabSeparationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLineExpression
entryRuleLineExpression
:
{ before(grammarAccess.getLineExpressionRule()); }
	 ruleLineExpression
{ after(grammarAccess.getLineExpressionRule()); } 
	 EOF 
;

// Rule LineExpression
ruleLineExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLineExpressionAccess().getGroup()); }
		(rule__LineExpression__Group__0)
		{ after(grammarAccess.getLineExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeaderExpression
entryRuleHeaderExpression
:
{ before(grammarAccess.getHeaderExpressionRule()); }
	 ruleHeaderExpression
{ after(grammarAccess.getHeaderExpressionRule()); } 
	 EOF 
;

// Rule HeaderExpression
ruleHeaderExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeaderExpressionAccess().getAlternatives()); }
		(rule__HeaderExpression__Alternatives)
		{ after(grammarAccess.getHeaderExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader1Expression
entryRuleHeader1Expression
:
{ before(grammarAccess.getHeader1ExpressionRule()); }
	 ruleHeader1Expression
{ after(grammarAccess.getHeader1ExpressionRule()); } 
	 EOF 
;

// Rule Header1Expression
ruleHeader1Expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeader1ExpressionAccess().getGroup()); }
		(rule__Header1Expression__Group__0)
		{ after(grammarAccess.getHeader1ExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader2Expression
entryRuleHeader2Expression
:
{ before(grammarAccess.getHeader2ExpressionRule()); }
	 ruleHeader2Expression
{ after(grammarAccess.getHeader2ExpressionRule()); } 
	 EOF 
;

// Rule Header2Expression
ruleHeader2Expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeader2ExpressionAccess().getGroup()); }
		(rule__Header2Expression__Group__0)
		{ after(grammarAccess.getHeader2ExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader3Expression
entryRuleHeader3Expression
:
{ before(grammarAccess.getHeader3ExpressionRule()); }
	 ruleHeader3Expression
{ after(grammarAccess.getHeader3ExpressionRule()); } 
	 EOF 
;

// Rule Header3Expression
ruleHeader3Expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeader3ExpressionAccess().getGroup()); }
		(rule__Header3Expression__Group__0)
		{ after(grammarAccess.getHeader3ExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader4Expression
entryRuleHeader4Expression
:
{ before(grammarAccess.getHeader4ExpressionRule()); }
	 ruleHeader4Expression
{ after(grammarAccess.getHeader4ExpressionRule()); } 
	 EOF 
;

// Rule Header4Expression
ruleHeader4Expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeader4ExpressionAccess().getGroup()); }
		(rule__Header4Expression__Group__0)
		{ after(grammarAccess.getHeader4ExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader5Expression
entryRuleHeader5Expression
:
{ before(grammarAccess.getHeader5ExpressionRule()); }
	 ruleHeader5Expression
{ after(grammarAccess.getHeader5ExpressionRule()); } 
	 EOF 
;

// Rule Header5Expression
ruleHeader5Expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeader5ExpressionAccess().getGroup()); }
		(rule__Header5Expression__Group__0)
		{ after(grammarAccess.getHeader5ExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader6Expression
entryRuleHeader6Expression
:
{ before(grammarAccess.getHeader6ExpressionRule()); }
	 ruleHeader6Expression
{ after(grammarAccess.getHeader6ExpressionRule()); } 
	 EOF 
;

// Rule Header6Expression
ruleHeader6Expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeader6ExpressionAccess().getGroup()); }
		(rule__Header6Expression__Group__0)
		{ after(grammarAccess.getHeader6ExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmphasisExpression
entryRuleEmphasisExpression
:
{ before(grammarAccess.getEmphasisExpressionRule()); }
	 ruleEmphasisExpression
{ after(grammarAccess.getEmphasisExpressionRule()); } 
	 EOF 
;

// Rule EmphasisExpression
ruleEmphasisExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getEmphasisExpressionAccess().getAlternatives()); }
			(rule__EmphasisExpression__Alternatives)
			{ after(grammarAccess.getEmphasisExpressionAccess().getAlternatives()); }
		)
		(
			{ before(grammarAccess.getEmphasisExpressionAccess().getAlternatives()); }
			(rule__EmphasisExpression__Alternatives)*
			{ after(grammarAccess.getEmphasisExpressionAccess().getAlternatives()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStrongExpression
entryRuleStrongExpression
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getStrongExpressionRule()); }
	 ruleStrongExpression
{ after(grammarAccess.getStrongExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule StrongExpression
ruleStrongExpression 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStrongExpressionAccess().getGroup()); }
		(rule__StrongExpression__Group__0)
		{ after(grammarAccess.getStrongExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleItalicExpression
entryRuleItalicExpression
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getItalicExpressionRule()); }
	 ruleItalicExpression
{ after(grammarAccess.getItalicExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ItalicExpression
ruleItalicExpression 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItalicExpressionAccess().getGroup()); }
		(rule__ItalicExpression__Group__0)
		{ after(grammarAccess.getItalicExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleScratchExpression
entryRuleScratchExpression
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getScratchExpressionRule()); }
	 ruleScratchExpression
{ after(grammarAccess.getScratchExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ScratchExpression
ruleScratchExpression 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScratchExpressionAccess().getGroup()); }
		(rule__ScratchExpression__Group__0)
		{ after(grammarAccess.getScratchExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleNaturalExpression
entryRuleNaturalExpression
:
{ before(grammarAccess.getNaturalExpressionRule()); }
	 ruleNaturalExpression
{ after(grammarAccess.getNaturalExpressionRule()); } 
	 EOF 
;

// Rule NaturalExpression
ruleNaturalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNaturalExpressionAccess().getGroup()); }
		(rule__NaturalExpression__Group__0)
		{ after(grammarAccess.getNaturalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContent
entryRuleContent
:
{ before(grammarAccess.getContentRule()); }
	 ruleContent
{ after(grammarAccess.getContentRule()); } 
	 EOF 
;

// Rule Content
ruleContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContentAccess().getAlternatives()); }
		(rule__Content__Alternatives)
		{ after(grammarAccess.getContentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives_0()); }
		(rule__Expression__Alternatives_0)
		{ after(grammarAccess.getExpressionAccess().getAlternatives_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
		(rule__Expression__Group_1__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getCAssignment_0_0()); }
		(rule__Expression__CAssignment_0_0)
		{ after(grammarAccess.getExpressionAccess().getCAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getCAssignment_0_1()); }
		(rule__Expression__CAssignment_0_1)
		{ after(grammarAccess.getExpressionAccess().getCAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getCAssignment_0_2()); }
		(rule__Expression__CAssignment_0_2)
		{ after(grammarAccess.getExpressionAccess().getCAssignment_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_0_3()); }
		(rule__Expression__Group_0_3__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextExpressionAccess().getCAssignment_0()); }
		(rule__TextExpression__CAssignment_0)
		{ after(grammarAccess.getTextExpressionAccess().getCAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextExpressionAccess().getGroup_1()); }
		(rule__TextExpression__Group_1__0)
		{ after(grammarAccess.getTextExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextExpressionAccess().getCAssignment_1_0_0()); }
		(rule__TextExpression__CAssignment_1_0_0)
		{ after(grammarAccess.getTextExpressionAccess().getCAssignment_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextExpressionAccess().getCAssignment_1_0_1()); }
		(rule__TextExpression__CAssignment_1_0_1)
		{ after(grammarAccess.getTextExpressionAccess().getCAssignment_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTextExpressionAccess().getAlternatives_1_0_2()); }
		(rule__TextExpression__Alternatives_1_0_2)
		{ after(grammarAccess.getTextExpressionAccess().getAlternatives_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Alternatives_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextExpressionAccess().getCAssignment_1_0_2_0()); }
		(rule__TextExpression__CAssignment_1_0_2_0)
		{ after(grammarAccess.getTextExpressionAccess().getCAssignment_1_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextExpressionAccess().getCAssignment_1_0_2_1()); }
		(rule__TextExpression__CAssignment_1_0_2_1)
		{ after(grammarAccess.getTextExpressionAccess().getCAssignment_1_0_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getTextExpressionAccess().getCAssignment_1_0_2_2()); }
		(rule__TextExpression__CAssignment_1_0_2_2)
		{ after(grammarAccess.getTextExpressionAccess().getCAssignment_1_0_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getGroup_0()); }
		(rule__ListExpression__Group_0__0)
		{ after(grammarAccess.getListExpressionAccess().getGroup_0()); }
	)
	|
	(
		(
			{ before(grammarAccess.getListExpressionAccess().getGroup_1()); }
			(rule__ListExpression__Group_1__0)
			{ after(grammarAccess.getListExpressionAccess().getGroup_1()); }
		)
		(
			{ before(grammarAccess.getListExpressionAccess().getGroup_1()); }
			(rule__ListExpression__Group_1__0)*
			{ after(grammarAccess.getListExpressionAccess().getGroup_1()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Alternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getAsteriskKeyword_0_1_0_0()); }
		'*'
		{ after(grammarAccess.getListExpressionAccess().getAsteriskKeyword_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getListExpressionAccess().getHyphenMinusKeyword_0_1_0_1()); }
		'-'
		{ after(grammarAccess.getListExpressionAccess().getHyphenMinusKeyword_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getListExpressionAccess().getPlusSignKeyword_0_1_0_2()); }
		'+'
		{ after(grammarAccess.getListExpressionAccess().getPlusSignKeyword_0_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getGroup_0()); }
		(rule__LinkExpression__Group_0__0)
		{ after(grammarAccess.getLinkExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinkExpressionAccess().getGroup_1()); }
		(rule__LinkExpression__Group_1__0)
		{ after(grammarAccess.getLinkExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderExpressionAccess().getHeader1ExpressionParserRuleCall_0()); }
		ruleHeader1Expression
		{ after(grammarAccess.getHeaderExpressionAccess().getHeader1ExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getHeaderExpressionAccess().getHeader2ExpressionParserRuleCall_1()); }
		ruleHeader2Expression
		{ after(grammarAccess.getHeaderExpressionAccess().getHeader2ExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getHeaderExpressionAccess().getHeader3ExpressionParserRuleCall_2()); }
		ruleHeader3Expression
		{ after(grammarAccess.getHeaderExpressionAccess().getHeader3ExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getHeaderExpressionAccess().getHeader4ExpressionParserRuleCall_3()); }
		ruleHeader4Expression
		{ after(grammarAccess.getHeaderExpressionAccess().getHeader4ExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getHeaderExpressionAccess().getHeader5ExpressionParserRuleCall_4()); }
		ruleHeader5Expression
		{ after(grammarAccess.getHeaderExpressionAccess().getHeader5ExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getHeaderExpressionAccess().getHeader6ExpressionParserRuleCall_5()); }
		ruleHeader6Expression
		{ after(grammarAccess.getHeaderExpressionAccess().getHeader6ExpressionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmphasisExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmphasisExpressionAccess().getGroup_0()); }
		(rule__EmphasisExpression__Group_0__0)
		{ after(grammarAccess.getEmphasisExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEmphasisExpressionAccess().getCAssignment_1()); }
		(rule__EmphasisExpression__CAssignment_1)
		{ after(grammarAccess.getEmphasisExpressionAccess().getCAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmphasisExpression__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmphasisExpressionAccess().getCAssignment_0_0_0()); }
		(rule__EmphasisExpression__CAssignment_0_0_0)
		{ after(grammarAccess.getEmphasisExpressionAccess().getCAssignment_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEmphasisExpressionAccess().getCAssignment_0_0_1()); }
		(rule__EmphasisExpression__CAssignment_0_0_1)
		{ after(grammarAccess.getEmphasisExpressionAccess().getCAssignment_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getEmphasisExpressionAccess().getCAssignment_0_0_2()); }
		(rule__EmphasisExpression__CAssignment_0_0_2)
		{ after(grammarAccess.getEmphasisExpressionAccess().getCAssignment_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContentAccess().getGroup_0()); }
		(rule__Content__Group_0__0)
		{ after(grammarAccess.getContentAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getApostropheKeyword_1()); }
		'\''
		{ after(grammarAccess.getContentAccess().getApostropheKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getHyphenMinusKeyword_2()); }
		'-'
		{ after(grammarAccess.getContentAccess().getHyphenMinusKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getVerticalLineKeyword_3()); }
		'|'
		{ after(grammarAccess.getContentAccess().getVerticalLineKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getQuotationMarkKeyword_4()); }
		'"'
		{ after(grammarAccess.getContentAccess().getQuotationMarkKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContentAccess().getIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getContentAccess().getIDTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getSTRINGTerminalRuleCall_0_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getContentAccess().getSTRINGTerminalRuleCall_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getINTTerminalRuleCall_0_0_2()); }
		RULE_INT
		{ after(grammarAccess.getContentAccess().getINTTerminalRuleCall_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__0__Impl
	rule__File__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getFileAction_0()); }
	()
	{ after(grammarAccess.getFileAccess().getFileAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getExpressionAssignment_1()); }
	(rule__File__ExpressionAssignment_1)*
	{ after(grammarAccess.getFileAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_3__0__Impl
	rule__Expression__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getCAssignment_0_3_0()); }
	(rule__Expression__CAssignment_0_3_0)
	{ after(grammarAccess.getExpressionAccess().getCAssignment_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getBLTerminalRuleCall_0_3_1()); }
	(RULE_BL)?
	{ after(grammarAccess.getExpressionAccess().getBLTerminalRuleCall_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getCAssignment_1_0()); }
	(rule__Expression__CAssignment_1_0)
	{ after(grammarAccess.getExpressionAccess().getCAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getBLTerminalRuleCall_1_1()); }
	(RULE_BL)?
	{ after(grammarAccess.getExpressionAccess().getBLTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakLineExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakLineExpression__Group__0__Impl
	rule__BreakLineExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakLineExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakLineExpressionAccess().getBreakLineExpressionBAction_0()); }
	()
	{ after(grammarAccess.getBreakLineExpressionAccess().getBreakLineExpressionBAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakLineExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakLineExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakLineExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakLineExpressionAccess().getBLTerminalRuleCall_1()); }
	RULE_BL
	{ after(grammarAccess.getBreakLineExpressionAccess().getBLTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextExpression__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextExpressionAccess().getAlternatives_1_0()); }
	(rule__TextExpression__Alternatives_1_0)
	{ after(grammarAccess.getTextExpressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_0__0__Impl
	rule__ListExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getTextExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getListExpressionAccess().getTextExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListExpressionAccess().getGroup_0_1()); }
		(rule__ListExpression__Group_0_1__0)
		{ after(grammarAccess.getListExpressionAccess().getGroup_0_1()); }
	)
	(
		{ before(grammarAccess.getListExpressionAccess().getGroup_0_1()); }
		(rule__ListExpression__Group_0_1__0)*
		{ after(grammarAccess.getListExpressionAccess().getGroup_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListExpression__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_0_1__0__Impl
	rule__ListExpression__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getAlternatives_0_1_0()); }
	(rule__ListExpression__Alternatives_0_1_0)
	{ after(grammarAccess.getListExpressionAccess().getAlternatives_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_0_1__1__Impl
	rule__ListExpression__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getWSTerminalRuleCall_0_1_1()); }
	(RULE_WS)*
	{ after(grammarAccess.getListExpressionAccess().getWSTerminalRuleCall_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_0_1__2__Impl
	rule__ListExpression__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getContentUnorderedAssignment_0_1_2()); }
	(rule__ListExpression__ContentUnorderedAssignment_0_1_2)
	{ after(grammarAccess.getListExpressionAccess().getContentUnorderedAssignment_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getBLTerminalRuleCall_0_1_3()); }
	(RULE_BL)?
	{ after(grammarAccess.getListExpressionAccess().getBLTerminalRuleCall_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_1__0__Impl
	rule__ListExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
	{ after(grammarAccess.getListExpressionAccess().getINTTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_1__1__Impl
	rule__ListExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getListExpressionAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_1__2__Impl
	rule__ListExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getWSTerminalRuleCall_1_2()); }
	(RULE_WS)*
	{ after(grammarAccess.getListExpressionAccess().getWSTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_1__3__Impl
	rule__ListExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getContentOrderedAssignment_1_3()); }
	(rule__ListExpression__ContentOrderedAssignment_1_3)
	{ after(grammarAccess.getListExpressionAccess().getContentOrderedAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListExpressionAccess().getBLTerminalRuleCall_1_4()); }
	(RULE_BL)?
	{ after(grammarAccess.getListExpressionAccess().getBLTerminalRuleCall_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuoteExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuoteExpression__Group__0__Impl
	rule__QuoteExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoteExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuoteExpressionAccess().getTextExpressionAction_0()); }
	()
	{ after(grammarAccess.getQuoteExpressionAccess().getTextExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoteExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuoteExpression__Group__1__Impl
	rule__QuoteExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoteExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuoteExpressionAccess().getGreaterThanSignKeyword_1()); }
	('>')
	{ after(grammarAccess.getQuoteExpressionAccess().getGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoteExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuoteExpression__Group__2__Impl
	rule__QuoteExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoteExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getQuoteExpressionAccess().getContentAssignment_2()); }
		(rule__QuoteExpression__ContentAssignment_2)
		{ after(grammarAccess.getQuoteExpressionAccess().getContentAssignment_2()); }
	)
	(
		{ before(grammarAccess.getQuoteExpressionAccess().getContentAssignment_2()); }
		(rule__QuoteExpression__ContentAssignment_2)*
		{ after(grammarAccess.getQuoteExpressionAccess().getContentAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoteExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuoteExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoteExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuoteExpressionAccess().getBLTerminalRuleCall_3()); }
	(RULE_BL)?
	{ after(grammarAccess.getQuoteExpressionAccess().getBLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefExpression__Group__0__Impl
	rule__RefExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefExpressionAccess().getRefExpressionAction_0()); }
	()
	{ after(grammarAccess.getRefExpressionAccess().getRefExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefExpression__Group__1__Impl
	rule__RefExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefExpressionAccess().getLeftSquareBracketKeyword_1()); }
	('[')
	{ after(grammarAccess.getRefExpressionAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefExpression__Group__2__Impl
	rule__RefExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefExpressionAccess().getRefNameAssignment_2()); }
	(rule__RefExpression__RefNameAssignment_2)
	{ after(grammarAccess.getRefExpressionAccess().getRefNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefExpression__Group__3__Impl
	rule__RefExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefExpressionAccess().getRightSquareBracketColonKeyword_3()); }
	(']:')
	{ after(grammarAccess.getRefExpressionAccess().getRightSquareBracketColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefExpression__Group__4__Impl
	rule__RefExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefExpressionAccess().getRefContentAssignment_4()); }
	(rule__RefExpression__RefContentAssignment_4)?
	{ after(grammarAccess.getRefExpressionAccess().getRefContentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefExpressionAccess().getBLTerminalRuleCall_5()); }
	(RULE_BL)?
	{ after(grammarAccess.getRefExpressionAccess().getBLTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_0__0__Impl
	rule__LinkExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getLinkExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getLinkExpressionAccess().getLinkExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_0__1__Impl
	rule__LinkExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getLeftSquareBracketKeyword_0_1()); }
	('[')
	{ after(grammarAccess.getLinkExpressionAccess().getLeftSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_0__2__Impl
	rule__LinkExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getAltTextAssignment_0_2()); }
	(rule__LinkExpression__AltTextAssignment_0_2)
	{ after(grammarAccess.getLinkExpressionAccess().getAltTextAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_0__3__Impl
	rule__LinkExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getRightSquareBracketLeftParenthesisKeyword_0_3()); }
	('](')
	{ after(grammarAccess.getLinkExpressionAccess().getRightSquareBracketLeftParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_0__4__Impl
	rule__LinkExpression__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getLinkContentAssignment_0_4()); }
	(rule__LinkExpression__LinkContentAssignment_0_4)?
	{ after(grammarAccess.getLinkExpressionAccess().getLinkContentAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_0__5__Impl
	rule__LinkExpression__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getRightParenthesisKeyword_0_5()); }
	(')')
	{ after(grammarAccess.getLinkExpressionAccess().getRightParenthesisKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getBLTerminalRuleCall_0_6()); }
	(RULE_BL)?
	{ after(grammarAccess.getLinkExpressionAccess().getBLTerminalRuleCall_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__0__Impl
	rule__LinkExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getLeftSquareBracketKeyword_1_0()); }
	('[')
	{ after(grammarAccess.getLinkExpressionAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__1__Impl
	rule__LinkExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getAltTextAssignment_1_1()); }
	(rule__LinkExpression__AltTextAssignment_1_1)
	{ after(grammarAccess.getLinkExpressionAccess().getAltTextAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__2__Impl
	rule__LinkExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getRightSquareBracketLeftSquareBracketKeyword_1_2()); }
	('][')
	{ after(grammarAccess.getLinkExpressionAccess().getRightSquareBracketLeftSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__3__Impl
	rule__LinkExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getRefNameAssignment_1_3()); }
	(rule__LinkExpression__RefNameAssignment_1_3)?
	{ after(grammarAccess.getLinkExpressionAccess().getRefNameAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__4__Impl
	rule__LinkExpression__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getRightSquareBracketKeyword_1_4()); }
	(']')
	{ after(grammarAccess.getLinkExpressionAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkExpression__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkExpressionAccess().getBLTerminalRuleCall_1_5()); }
	(RULE_BL)?
	{ after(grammarAccess.getLinkExpressionAccess().getBLTerminalRuleCall_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImageExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageExpression__Group__0__Impl
	rule__ImageExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageExpressionAccess().getImageExpressionAction_0()); }
	()
	{ after(grammarAccess.getImageExpressionAccess().getImageExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageExpression__Group__1__Impl
	rule__ImageExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageExpressionAccess().getExclamationMarkLeftSquareBracketKeyword_1()); }
	('![')
	{ after(grammarAccess.getImageExpressionAccess().getExclamationMarkLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageExpression__Group__2__Impl
	rule__ImageExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageExpressionAccess().getAltTextAssignment_2()); }
	(rule__ImageExpression__AltTextAssignment_2)
	{ after(grammarAccess.getImageExpressionAccess().getAltTextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageExpression__Group__3__Impl
	rule__ImageExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageExpressionAccess().getRightSquareBracketLeftParenthesisKeyword_3()); }
	('](')
	{ after(grammarAccess.getImageExpressionAccess().getRightSquareBracketLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageExpression__Group__4__Impl
	rule__ImageExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageExpressionAccess().getLinkContentAssignment_4()); }
	(rule__ImageExpression__LinkContentAssignment_4)?
	{ after(grammarAccess.getImageExpressionAccess().getLinkContentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageExpression__Group__5__Impl
	rule__ImageExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageExpressionAccess().getRightParenthesisKeyword_5()); }
	(')')
	{ after(grammarAccess.getImageExpressionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImageExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageExpressionAccess().getBLTerminalRuleCall_6()); }
	(RULE_BL)?
	{ after(grammarAccess.getImageExpressionAccess().getBLTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VideoExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VideoExpression__Group__0__Impl
	rule__VideoExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVideoExpressionAccess().getVideoExpressionAction_0()); }
	()
	{ after(grammarAccess.getVideoExpressionAccess().getVideoExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VideoExpression__Group__1__Impl
	rule__VideoExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVideoExpressionAccess().getLeftSquareBracketExclamationMarkLeftSquareBracketKeyword_1()); }
	('[![')
	{ after(grammarAccess.getVideoExpressionAccess().getLeftSquareBracketExclamationMarkLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VideoExpression__Group__2__Impl
	rule__VideoExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVideoExpressionAccess().getAltTextAssignment_2()); }
	(rule__VideoExpression__AltTextAssignment_2)
	{ after(grammarAccess.getVideoExpressionAccess().getAltTextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VideoExpression__Group__3__Impl
	rule__VideoExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVideoExpressionAccess().getRightSquareBracketLeftParenthesisKeyword_3()); }
	('](')
	{ after(grammarAccess.getVideoExpressionAccess().getRightSquareBracketLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VideoExpression__Group__4__Impl
	rule__VideoExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVideoExpressionAccess().getLinkImageAssignment_4()); }
	(rule__VideoExpression__LinkImageAssignment_4)?
	{ after(grammarAccess.getVideoExpressionAccess().getLinkImageAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VideoExpression__Group__5__Impl
	rule__VideoExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVideoExpressionAccess().getRightParenthesisRightSquareBracketLeftParenthesisKeyword_5()); }
	(')](')
	{ after(grammarAccess.getVideoExpressionAccess().getRightParenthesisRightSquareBracketLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VideoExpression__Group__6__Impl
	rule__VideoExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVideoExpressionAccess().getLinkVideoAssignment_6()); }
	(rule__VideoExpression__LinkVideoAssignment_6)?
	{ after(grammarAccess.getVideoExpressionAccess().getLinkVideoAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VideoExpression__Group__7__Impl
	rule__VideoExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVideoExpressionAccess().getRightParenthesisKeyword_7()); }
	(')')
	{ after(grammarAccess.getVideoExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VideoExpression__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVideoExpressionAccess().getBLTerminalRuleCall_8()); }
	(RULE_BL)?
	{ after(grammarAccess.getVideoExpressionAccess().getBLTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TabExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabExpression__Group__0__Impl
	rule__TabExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabExpressionAccess().getTabExpressionAction_0()); }
	()
	{ after(grammarAccess.getTabExpressionAccess().getTabExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabExpressionAccess().getGroup_1()); }
	(rule__TabExpression__Group_1__0)
	{ after(grammarAccess.getTabExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TabExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabExpression__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabExpressionAccess().getGroup_1_0()); }
	(rule__TabExpression__Group_1_0__0)
	{ after(grammarAccess.getTabExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TabExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabExpression__Group_1_0__0__Impl
	rule__TabExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabExpressionAccess().getHeaderAssignment_1_0_0()); }
	(rule__TabExpression__HeaderAssignment_1_0_0)
	{ after(grammarAccess.getTabExpressionAccess().getHeaderAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabExpression__Group_1_0__1__Impl
	rule__TabExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabExpressionAccess().getBLTerminalRuleCall_1_0_1()); }
	RULE_BL
	{ after(grammarAccess.getTabExpressionAccess().getBLTerminalRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabExpression__Group_1_0__2__Impl
	rule__TabExpression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabExpressionAccess().getTabSeparationParserRuleCall_1_0_2()); }
	ruleTabSeparation
	{ after(grammarAccess.getTabExpressionAccess().getTabSeparationParserRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabExpression__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabExpressionAccess().getGroup_1_0_3()); }
	(rule__TabExpression__Group_1_0_3__0)*
	{ after(grammarAccess.getTabExpressionAccess().getGroup_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TabExpression__Group_1_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabExpression__Group_1_0_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabExpressionAccess().getGroup_1_0_3_0()); }
	(rule__TabExpression__Group_1_0_3_0__0)
	{ after(grammarAccess.getTabExpressionAccess().getGroup_1_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TabExpression__Group_1_0_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabExpression__Group_1_0_3_0__0__Impl
	rule__TabExpression__Group_1_0_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabExpressionAccess().getBLTerminalRuleCall_1_0_3_0_0()); }
	RULE_BL
	{ after(grammarAccess.getTabExpressionAccess().getBLTerminalRuleCall_1_0_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabExpression__Group_1_0_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__Group_1_0_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabExpressionAccess().getLinesAssignment_1_0_3_0_1()); }
	(rule__TabExpression__LinesAssignment_1_0_3_0_1)
	{ after(grammarAccess.getTabExpressionAccess().getLinesAssignment_1_0_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TabSeparation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabSeparation__Group__0__Impl
	rule__TabSeparation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabSeparationAccess().getVerticalLineKeyword_0()); }
	('|')?
	{ after(grammarAccess.getTabSeparationAccess().getVerticalLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabSeparation__Group__1__Impl
	rule__TabSeparation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_1()); }
	'-'
	{ after(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabSeparation__Group__2__Impl
	rule__TabSeparation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_2()); }
		('-')
		{ after(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_2()); }
	)
	(
		{ before(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_2()); }
		('-')*
		{ after(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabSeparation__Group__3__Impl
	rule__TabSeparation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTabSeparationAccess().getGroup_3()); }
		(rule__TabSeparation__Group_3__0)
		{ after(grammarAccess.getTabSeparationAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getTabSeparationAccess().getGroup_3()); }
		(rule__TabSeparation__Group_3__0)*
		{ after(grammarAccess.getTabSeparationAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabSeparation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabSeparationAccess().getVerticalLineKeyword_4()); }
	('|')?
	{ after(grammarAccess.getTabSeparationAccess().getVerticalLineKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TabSeparation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabSeparation__Group_3__0__Impl
	rule__TabSeparation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabSeparationAccess().getVerticalLineKeyword_3_0()); }
	'|'
	{ after(grammarAccess.getTabSeparationAccess().getVerticalLineKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabSeparation__Group_3__1__Impl
	rule__TabSeparation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_3_1()); }
	'-'
	{ after(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TabSeparation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TabSeparation__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_3_2()); }
		('-')
		{ after(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_3_2()); }
	)
	(
		{ before(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_3_2()); }
		('-')*
		{ after(grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_3_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LineExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineExpression__Group__0__Impl
	rule__LineExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_0()); }
	('|')?
	{ after(grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineExpression__Group__1__Impl
	rule__LineExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineExpressionAccess().getCellsAssignment_1()); }
	(rule__LineExpression__CellsAssignment_1)
	{ after(grammarAccess.getLineExpressionAccess().getCellsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineExpression__Group__2__Impl
	rule__LineExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineExpressionAccess().getGroup_2()); }
	(rule__LineExpression__Group_2__0)*
	{ after(grammarAccess.getLineExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_3()); }
	('|')?
	{ after(grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LineExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineExpression__Group_2__0__Impl
	rule__LineExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_2_0()); }
	('|')
	{ after(grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LineExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLineExpressionAccess().getCellsAssignment_2_1()); }
	(rule__LineExpression__CellsAssignment_2_1)
	{ after(grammarAccess.getLineExpressionAccess().getCellsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header1Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header1Expression__Group__0__Impl
	rule__Header1Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader1ExpressionAccess().getHeader1ExpressionAction_0()); }
	()
	{ after(grammarAccess.getHeader1ExpressionAccess().getHeader1ExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header1Expression__Group__1__Impl
	rule__Header1Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader1ExpressionAccess().getNumberSignKeyword_1()); }
	'#'
	{ after(grammarAccess.getHeader1ExpressionAccess().getNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header1Expression__Group__2__Impl
	rule__Header1Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader1ExpressionAccess().getTitleAssignment_2()); }
	(rule__Header1Expression__TitleAssignment_2)
	{ after(grammarAccess.getHeader1ExpressionAccess().getTitleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header1Expression__Group__3__Impl
	rule__Header1Expression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader1ExpressionAccess().getGroup_3()); }
	(rule__Header1Expression__Group_3__0)*
	{ after(grammarAccess.getHeader1ExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header1Expression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader1ExpressionAccess().getBLTerminalRuleCall_4()); }
	(RULE_BL)?
	{ after(grammarAccess.getHeader1ExpressionAccess().getBLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header1Expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header1Expression__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader1ExpressionAccess().getNumberSignKeyword_3_0()); }
	'#'
	{ after(grammarAccess.getHeader1ExpressionAccess().getNumberSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header2Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header2Expression__Group__0__Impl
	rule__Header2Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader2ExpressionAccess().getHeader2ExpressionAction_0()); }
	()
	{ after(grammarAccess.getHeader2ExpressionAccess().getHeader2ExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header2Expression__Group__1__Impl
	rule__Header2Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader2ExpressionAccess().getNumberSignNumberSignKeyword_1()); }
	'##'
	{ after(grammarAccess.getHeader2ExpressionAccess().getNumberSignNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header2Expression__Group__2__Impl
	rule__Header2Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader2ExpressionAccess().getTitleAssignment_2()); }
	(rule__Header2Expression__TitleAssignment_2)
	{ after(grammarAccess.getHeader2ExpressionAccess().getTitleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header2Expression__Group__3__Impl
	rule__Header2Expression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader2ExpressionAccess().getGroup_3()); }
	(rule__Header2Expression__Group_3__0)*
	{ after(grammarAccess.getHeader2ExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header2Expression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader2ExpressionAccess().getBLTerminalRuleCall_4()); }
	(RULE_BL)?
	{ after(grammarAccess.getHeader2ExpressionAccess().getBLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header2Expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header2Expression__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader2ExpressionAccess().getNumberSignKeyword_3_0()); }
	'#'
	{ after(grammarAccess.getHeader2ExpressionAccess().getNumberSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header3Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header3Expression__Group__0__Impl
	rule__Header3Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader3ExpressionAccess().getHeader3ExpressionAction_0()); }
	()
	{ after(grammarAccess.getHeader3ExpressionAccess().getHeader3ExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header3Expression__Group__1__Impl
	rule__Header3Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader3ExpressionAccess().getNumberSignNumberSignNumberSignKeyword_1()); }
	'###'
	{ after(grammarAccess.getHeader3ExpressionAccess().getNumberSignNumberSignNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header3Expression__Group__2__Impl
	rule__Header3Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader3ExpressionAccess().getTitleAssignment_2()); }
	(rule__Header3Expression__TitleAssignment_2)
	{ after(grammarAccess.getHeader3ExpressionAccess().getTitleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header3Expression__Group__3__Impl
	rule__Header3Expression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader3ExpressionAccess().getGroup_3()); }
	(rule__Header3Expression__Group_3__0)*
	{ after(grammarAccess.getHeader3ExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header3Expression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader3ExpressionAccess().getBLTerminalRuleCall_4()); }
	(RULE_BL)?
	{ after(grammarAccess.getHeader3ExpressionAccess().getBLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header3Expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header3Expression__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader3ExpressionAccess().getNumberSignKeyword_3_0()); }
	'#'
	{ after(grammarAccess.getHeader3ExpressionAccess().getNumberSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header4Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header4Expression__Group__0__Impl
	rule__Header4Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader4ExpressionAccess().getHeader4ExpressionAction_0()); }
	()
	{ after(grammarAccess.getHeader4ExpressionAccess().getHeader4ExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header4Expression__Group__1__Impl
	rule__Header4Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader4ExpressionAccess().getNumberSignNumberSignNumberSignNumberSignKeyword_1()); }
	'####'
	{ after(grammarAccess.getHeader4ExpressionAccess().getNumberSignNumberSignNumberSignNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header4Expression__Group__2__Impl
	rule__Header4Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader4ExpressionAccess().getTitleAssignment_2()); }
	(rule__Header4Expression__TitleAssignment_2)
	{ after(grammarAccess.getHeader4ExpressionAccess().getTitleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header4Expression__Group__3__Impl
	rule__Header4Expression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader4ExpressionAccess().getGroup_3()); }
	(rule__Header4Expression__Group_3__0)*
	{ after(grammarAccess.getHeader4ExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header4Expression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader4ExpressionAccess().getBLTerminalRuleCall_4()); }
	(RULE_BL)?
	{ after(grammarAccess.getHeader4ExpressionAccess().getBLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header4Expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header4Expression__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader4ExpressionAccess().getNumberSignKeyword_3_0()); }
	'#'
	{ after(grammarAccess.getHeader4ExpressionAccess().getNumberSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header5Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header5Expression__Group__0__Impl
	rule__Header5Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader5ExpressionAccess().getHeader5ExpressionAction_0()); }
	()
	{ after(grammarAccess.getHeader5ExpressionAccess().getHeader5ExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header5Expression__Group__1__Impl
	rule__Header5Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader5ExpressionAccess().getNumberSignNumberSignNumberSignNumberSignNumberSignKeyword_1()); }
	'#####'
	{ after(grammarAccess.getHeader5ExpressionAccess().getNumberSignNumberSignNumberSignNumberSignNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header5Expression__Group__2__Impl
	rule__Header5Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader5ExpressionAccess().getTitleAssignment_2()); }
	(rule__Header5Expression__TitleAssignment_2)
	{ after(grammarAccess.getHeader5ExpressionAccess().getTitleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header5Expression__Group__3__Impl
	rule__Header5Expression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader5ExpressionAccess().getGroup_3()); }
	(rule__Header5Expression__Group_3__0)*
	{ after(grammarAccess.getHeader5ExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header5Expression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader5ExpressionAccess().getBLTerminalRuleCall_4()); }
	(RULE_BL)?
	{ after(grammarAccess.getHeader5ExpressionAccess().getBLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header5Expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header5Expression__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader5ExpressionAccess().getNumberSignKeyword_3_0()); }
	'#'
	{ after(grammarAccess.getHeader5ExpressionAccess().getNumberSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header6Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header6Expression__Group__0__Impl
	rule__Header6Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader6ExpressionAccess().getHeader6ExpressionAction_0()); }
	()
	{ after(grammarAccess.getHeader6ExpressionAccess().getHeader6ExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header6Expression__Group__1__Impl
	rule__Header6Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader6ExpressionAccess().getNumberSignNumberSignNumberSignNumberSignNumberSignNumberSignKeyword_1()); }
	'######'
	{ after(grammarAccess.getHeader6ExpressionAccess().getNumberSignNumberSignNumberSignNumberSignNumberSignNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header6Expression__Group__2__Impl
	rule__Header6Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader6ExpressionAccess().getTitleAssignment_2()); }
	(rule__Header6Expression__TitleAssignment_2)
	{ after(grammarAccess.getHeader6ExpressionAccess().getTitleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header6Expression__Group__3__Impl
	rule__Header6Expression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader6ExpressionAccess().getGroup_3()); }
	(rule__Header6Expression__Group_3__0)*
	{ after(grammarAccess.getHeader6ExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header6Expression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader6ExpressionAccess().getBLTerminalRuleCall_4()); }
	(RULE_BL)?
	{ after(grammarAccess.getHeader6ExpressionAccess().getBLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header6Expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header6Expression__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeader6ExpressionAccess().getNumberSignKeyword_3_0()); }
	'#'
	{ after(grammarAccess.getHeader6ExpressionAccess().getNumberSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmphasisExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmphasisExpression__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmphasisExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmphasisExpressionAccess().getAlternatives_0_0()); }
	(rule__EmphasisExpression__Alternatives_0_0)
	{ after(grammarAccess.getEmphasisExpressionAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StrongExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrongExpression__Group__0__Impl
	rule__StrongExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrongExpressionAccess().getStrongExpressionAction_0()); }
	()
	{ after(grammarAccess.getStrongExpressionAccess().getStrongExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrongExpression__Group__1__Impl
	rule__StrongExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrongExpressionAccess().getAsteriskAsteriskKeyword_1()); }
	'**'
	{ after(grammarAccess.getStrongExpressionAccess().getAsteriskAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrongExpression__Group__2__Impl
	rule__StrongExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrongExpressionAccess().getContentAssignment_2()); }
	(rule__StrongExpression__ContentAssignment_2)
	{ after(grammarAccess.getStrongExpressionAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StrongExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrongExpressionAccess().getAsteriskAsteriskKeyword_3()); }
	'**'
	{ after(grammarAccess.getStrongExpressionAccess().getAsteriskAsteriskKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItalicExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItalicExpression__Group__0__Impl
	rule__ItalicExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItalicExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItalicExpressionAccess().getItalicExpressionAction_0()); }
	()
	{ after(grammarAccess.getItalicExpressionAccess().getItalicExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItalicExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItalicExpression__Group__1__Impl
	rule__ItalicExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItalicExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItalicExpressionAccess().getAsteriskKeyword_1()); }
	'*'
	{ after(grammarAccess.getItalicExpressionAccess().getAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItalicExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItalicExpression__Group__2__Impl
	rule__ItalicExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItalicExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItalicExpressionAccess().getContentAssignment_2()); }
	(rule__ItalicExpression__ContentAssignment_2)
	{ after(grammarAccess.getItalicExpressionAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItalicExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItalicExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItalicExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItalicExpressionAccess().getAsteriskKeyword_3()); }
	'*'
	{ after(grammarAccess.getItalicExpressionAccess().getAsteriskKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScratchExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScratchExpression__Group__0__Impl
	rule__ScratchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScratchExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScratchExpressionAccess().getScratchExpressionAction_0()); }
	()
	{ after(grammarAccess.getScratchExpressionAccess().getScratchExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScratchExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScratchExpression__Group__1__Impl
	rule__ScratchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScratchExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScratchExpressionAccess().getTildeTildeKeyword_1()); }
	'~~'
	{ after(grammarAccess.getScratchExpressionAccess().getTildeTildeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScratchExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScratchExpression__Group__2__Impl
	rule__ScratchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScratchExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScratchExpressionAccess().getContentAssignment_2()); }
	(rule__ScratchExpression__ContentAssignment_2)
	{ after(grammarAccess.getScratchExpressionAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScratchExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScratchExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScratchExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScratchExpressionAccess().getTildeTildeKeyword_3()); }
	'~~'
	{ after(grammarAccess.getScratchExpressionAccess().getTildeTildeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NaturalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaturalExpression__Group__0__Impl
	rule__NaturalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaturalExpressionAccess().getEmphasisExpressionAction_0()); }
	()
	{ after(grammarAccess.getNaturalExpressionAccess().getEmphasisExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NaturalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNaturalExpressionAccess().getValueAssignment_1()); }
	(rule__NaturalExpression__ValueAssignment_1)
	{ after(grammarAccess.getNaturalExpressionAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Content__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Content__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContentAccess().getAlternatives_0_0()); }
	(rule__Content__Alternatives_0_0)
	{ after(grammarAccess.getContentAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__File__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFileAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getCHeaderExpressionParserRuleCall_0_0_0()); }
		ruleHeaderExpression
		{ after(grammarAccess.getExpressionAccess().getCHeaderExpressionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getCBreakLineExpressionParserRuleCall_0_1_0()); }
		ruleBreakLineExpression
		{ after(grammarAccess.getExpressionAccess().getCBreakLineExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getCRefExpressionParserRuleCall_0_2_0()); }
		ruleRefExpression
		{ after(grammarAccess.getExpressionAccess().getCRefExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CAssignment_0_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getCListExpressionParserRuleCall_0_3_0_0()); }
		ruleListExpression
		{ after(grammarAccess.getExpressionAccess().getCListExpressionParserRuleCall_0_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getCTextExpressionParserRuleCall_1_0_0()); }
		ruleTextExpression
		{ after(grammarAccess.getExpressionAccess().getCTextExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__CAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextExpressionAccess().getCEmphasisExpressionParserRuleCall_0_0()); }
		ruleEmphasisExpression
		{ after(grammarAccess.getTextExpressionAccess().getCEmphasisExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__CAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextExpressionAccess().getCQuoteExpressionParserRuleCall_1_0_0_0()); }
		ruleQuoteExpression
		{ after(grammarAccess.getTextExpressionAccess().getCQuoteExpressionParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__CAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextExpressionAccess().getCTabExpressionParserRuleCall_1_0_1_0()); }
		ruleTabExpression
		{ after(grammarAccess.getTextExpressionAccess().getCTabExpressionParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__CAssignment_1_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextExpressionAccess().getCLinkExpressionParserRuleCall_1_0_2_0_0()); }
		ruleLinkExpression
		{ after(grammarAccess.getTextExpressionAccess().getCLinkExpressionParserRuleCall_1_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__CAssignment_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextExpressionAccess().getCImageExpressionParserRuleCall_1_0_2_1_0()); }
		ruleImageExpression
		{ after(grammarAccess.getTextExpressionAccess().getCImageExpressionParserRuleCall_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__CAssignment_1_0_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextExpressionAccess().getCVideoExpressionParserRuleCall_1_0_2_2_0()); }
		ruleVideoExpression
		{ after(grammarAccess.getTextExpressionAccess().getCVideoExpressionParserRuleCall_1_0_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__ContentUnorderedAssignment_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getContentUnorderedTextExpressionParserRuleCall_0_1_2_0()); }
		ruleTextExpression
		{ after(grammarAccess.getListExpressionAccess().getContentUnorderedTextExpressionParserRuleCall_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListExpression__ContentOrderedAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListExpressionAccess().getContentOrderedTextExpressionParserRuleCall_1_3_0()); }
		ruleTextExpression
		{ after(grammarAccess.getListExpressionAccess().getContentOrderedTextExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuoteExpression__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuoteExpressionAccess().getContentTextExpressionParserRuleCall_2_0()); }
		ruleTextExpression
		{ after(grammarAccess.getQuoteExpressionAccess().getContentTextExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__RefNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefExpressionAccess().getRefNameNaturalExpressionParserRuleCall_2_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getRefExpressionAccess().getRefNameNaturalExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefExpression__RefContentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefExpressionAccess().getRefContentNaturalExpressionParserRuleCall_4_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getRefExpressionAccess().getRefContentNaturalExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__AltTextAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getAltTextNaturalExpressionParserRuleCall_0_2_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getLinkExpressionAccess().getAltTextNaturalExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__LinkContentAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getLinkContentNaturalExpressionParserRuleCall_0_4_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getLinkExpressionAccess().getLinkContentNaturalExpressionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__AltTextAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getAltTextNaturalExpressionParserRuleCall_1_1_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getLinkExpressionAccess().getAltTextNaturalExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkExpression__RefNameAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkExpressionAccess().getRefNameNaturalExpressionParserRuleCall_1_3_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getLinkExpressionAccess().getRefNameNaturalExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__AltTextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageExpressionAccess().getAltTextNaturalExpressionParserRuleCall_2_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getImageExpressionAccess().getAltTextNaturalExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageExpression__LinkContentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageExpressionAccess().getLinkContentNaturalExpressionParserRuleCall_4_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getImageExpressionAccess().getLinkContentNaturalExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__AltTextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVideoExpressionAccess().getAltTextNaturalExpressionParserRuleCall_2_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getVideoExpressionAccess().getAltTextNaturalExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__LinkImageAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVideoExpressionAccess().getLinkImageNaturalExpressionParserRuleCall_4_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getVideoExpressionAccess().getLinkImageNaturalExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoExpression__LinkVideoAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVideoExpressionAccess().getLinkVideoNaturalExpressionParserRuleCall_6_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getVideoExpressionAccess().getLinkVideoNaturalExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__HeaderAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTabExpressionAccess().getHeaderLineExpressionParserRuleCall_1_0_0_0()); }
		ruleLineExpression
		{ after(grammarAccess.getTabExpressionAccess().getHeaderLineExpressionParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TabExpression__LinesAssignment_1_0_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTabExpressionAccess().getLinesLineExpressionParserRuleCall_1_0_3_0_1_0()); }
		ruleLineExpression
		{ after(grammarAccess.getTabExpressionAccess().getLinesLineExpressionParserRuleCall_1_0_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__CellsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineExpressionAccess().getCellsNaturalExpressionParserRuleCall_1_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getLineExpressionAccess().getCellsNaturalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpression__CellsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineExpressionAccess().getCellsNaturalExpressionParserRuleCall_2_1_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getLineExpressionAccess().getCellsNaturalExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1Expression__TitleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeader1ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
		ruleEmphasisExpression
		{ after(grammarAccess.getHeader1ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2Expression__TitleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeader2ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
		ruleEmphasisExpression
		{ after(grammarAccess.getHeader2ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header3Expression__TitleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeader3ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
		ruleEmphasisExpression
		{ after(grammarAccess.getHeader3ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header4Expression__TitleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeader4ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
		ruleEmphasisExpression
		{ after(grammarAccess.getHeader4ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header5Expression__TitleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeader5ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
		ruleEmphasisExpression
		{ after(grammarAccess.getHeader5ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header6Expression__TitleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeader6ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
		ruleEmphasisExpression
		{ after(grammarAccess.getHeader6ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmphasisExpression__CAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmphasisExpressionAccess().getCStrongExpressionParserRuleCall_0_0_0_0()); }
		ruleStrongExpression
		{ after(grammarAccess.getEmphasisExpressionAccess().getCStrongExpressionParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmphasisExpression__CAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmphasisExpressionAccess().getCItalicExpressionParserRuleCall_0_0_1_0()); }
		ruleItalicExpression
		{ after(grammarAccess.getEmphasisExpressionAccess().getCItalicExpressionParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmphasisExpression__CAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmphasisExpressionAccess().getCScratchExpressionParserRuleCall_0_0_2_0()); }
		ruleScratchExpression
		{ after(grammarAccess.getEmphasisExpressionAccess().getCScratchExpressionParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmphasisExpression__CAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmphasisExpressionAccess().getCNaturalExpressionParserRuleCall_1_0()); }
		ruleNaturalExpression
		{ after(grammarAccess.getEmphasisExpressionAccess().getCNaturalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongExpression__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrongExpressionAccess().getContentEmphasisExpressionParserRuleCall_2_0()); }
		ruleEmphasisExpression
		{ after(grammarAccess.getStrongExpressionAccess().getContentEmphasisExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItalicExpression__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItalicExpressionAccess().getContentEmphasisExpressionParserRuleCall_2_0()); }
		ruleEmphasisExpression
		{ after(grammarAccess.getItalicExpressionAccess().getContentEmphasisExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScratchExpression__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScratchExpressionAccess().getContentEmphasisExpressionParserRuleCall_2_0()); }
		ruleEmphasisExpression
		{ after(grammarAccess.getScratchExpressionAccess().getContentEmphasisExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalExpression__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNaturalExpressionAccess().getValueContentParserRuleCall_1_0()); }
		ruleContent
		{ after(grammarAccess.getNaturalExpressionAccess().getValueContentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_BL : '\r'? '\n';

RULE_WS : (' '|'\t');

fragment RULE_DIGIT : '0'..'9';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ANY_OTHER : .;
