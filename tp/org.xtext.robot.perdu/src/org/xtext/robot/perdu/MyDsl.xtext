// automatically generated by Xtext
grammar org.xtext.robot.perdu.MyDsl with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/IDMProject/robot.ecore#//robot" as robot
import "platform:/resource/IDMProject/robot.ecore#//flotCtrl" as flotCtrl

ProgramUnit returns robot::ProgramUnit:
	{robot::ProgramUnit}
	 (( block+=Expression)*)?;

Expression returns flotCtrl::Expression:
	WhileLoop | NegExp | AndExp | IfBlock | Command;

BoolExp returns flotCtrl::BoolExp:
	NegExp | AndExp | BOOLEAN_LITERAL | HasTurnedCmd | ObstacleCmd;

WhileLoop returns flotCtrl::WhileLoop:
	'while' loopCond=BoolExp 'do'
		(block+=Expression)*
	'end';

NegExp returns flotCtrl::NegExp:
	'not' exp=BoolExp;

AndExp returns flotCtrl::AndExp:
	'and' leftExp=BoolExp rightExp=BoolExp;

IfBlock returns flotCtrl::IfBlock:
	'if' condition=BoolExp 'then'
		thenBlock+=Expression (thenBlock+=Expression)* 
	('else' elseBlock+=Expression (elseBlock+=Expression)* )?
	'end';
	
Command returns robot::Command:
	MoveCmd | ObstacleCmd | BipCmd | SetTurnAngleCmd | HasTurnedCmd | TurnCmd | StopEngineCmd | StopProgramCmd | PrintCmd;

PrintCmd returns robot::PrintCmd:
	'display' '('
		('msg' '=' msg=STRING ','?) & 
		('duration' '=' duration=INT ','?) & 
		('line' '=' line=INT ','?) & 
		('col' '=' col=INT ','?)
	')'
;

StopEngineCmd returns robot::StopEngineCmd:
	'stopEngine' '(' ')'
;

StopProgramCmd returns robot::StopProgramCmd:
	'stopProgram' '(' ')'
;

TurnCmd returns robot::TurnCmd:
	'turn' '(' 
		('power' '=' power=DOUBLE ','?) &
		('angle' '=' angle=DOUBLE ','?)
	')'
;

HasTurnedCmd returns robot::HasTurnedCmd:
	'hasTurned' '('
		'angle' '=' angle=DOUBLE
	')'
;

ObstacleCmd returns robot::ObstacleCmd:
	'obstacle' '('
		'distance' '=' distance=DOUBLE
	')'
;

BipCmd returns robot::Bip:
	'bip' '('
		('duration' '=' duration=INT ','?) &  
		('power' '=' power=DOUBLE ','?) & 
		('repeat' '=' repet=BOOLEAN_LITERAL ','?)
	')'
;

SetTurnAngleCmd returns robot::SetTurnAngleCmd:
	'setTurnAngle' '('
		'angle' '=' angle=DOUBLE
	')'
;

MoveCmd returns robot::MoveCmd:
	'move' '('
		'power' '=' power=DOUBLE
	')'
;


BOOLEAN_LITERAL returns ecore::EBoolean: 'true'|'false';
terminal STRING
: 
'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'" ;
terminal ML_COMMENT
: '/*' -> '*/';
terminal SL_COMMENT 
: '//' !('\n'|'\r')* ('\r'? '\n')?;
terminal WS
: (' '|'\t'|'\r'|'\n')+;
terminal fragment DIGIT: '0'..'9';
terminal DOUBLE returns ecore::EDouble: INT ('.' DIGIT*);
terminal INT returns ecore::EInt: '0' | ('1'..'9' DIGIT*);