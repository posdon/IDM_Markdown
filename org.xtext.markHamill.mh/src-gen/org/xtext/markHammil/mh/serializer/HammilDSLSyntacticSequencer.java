/*
 * generated by Xtext 2.12.0
 */
package org.xtext.markHammil.mh.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.markHammil.mh.services.HammilDSLGrammarAccess;

@SuppressWarnings("all")
public class HammilDSLSyntacticSequencer extends AbstractSyntacticSequencer {

	protected HammilDSLGrammarAccess grammarAccess;
	protected AbstractElementAlias match_CodeExpression_BLTerminalRuleCall_1_4_q;
	protected AbstractElementAlias match_HeaderDepth1Expression_BLTerminalRuleCall_0_5_q;
	protected AbstractElementAlias match_HeaderDepth1Expression_BLTerminalRuleCall_1_3_q;
	protected AbstractElementAlias match_HeaderDepth1Expression_EqualsSignKeyword_1_2_p;
	protected AbstractElementAlias match_HeaderDepth1Expression_NumberSignKeyword_0_3_a;
	protected AbstractElementAlias match_HeaderDepth1Expression_STerminalRuleCall_0_1_p;
	protected AbstractElementAlias match_HeaderDepth1Expression_STerminalRuleCall_0_4_a;
	protected AbstractElementAlias match_HeaderDepth2Expression_BLTerminalRuleCall_0_3_q;
	protected AbstractElementAlias match_HeaderDepth2Expression_BLTerminalRuleCall_1_3_q;
	protected AbstractElementAlias match_HeaderDepth2Expression_HyphenMinusKeyword_1_2_p;
	protected AbstractElementAlias match_HeaderDepth2Expression_NumberSignKeyword_0_2_a;
	protected AbstractElementAlias match_HeaderDepth3Expression_BLTerminalRuleCall_3_q;
	protected AbstractElementAlias match_HeaderDepth3Expression_NumberSignKeyword_2_a;
	protected AbstractElementAlias match_HeaderDepth4Expression_BLTerminalRuleCall_3_q;
	protected AbstractElementAlias match_HeaderDepth4Expression_NumberSignKeyword_2_a;
	protected AbstractElementAlias match_HeaderDepth5Expression_BLTerminalRuleCall_3_q;
	protected AbstractElementAlias match_HeaderDepth5Expression_NumberSignKeyword_2_a;
	protected AbstractElementAlias match_HeaderDepth6Expression_BLTerminalRuleCall_3_q;
	protected AbstractElementAlias match_HeaderDepth6Expression_NumberSignKeyword_2_a;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (HammilDSLGrammarAccess) access;
		match_CodeExpression_BLTerminalRuleCall_1_4_q = new TokenAlias(false, true, grammarAccess.getCodeExpressionAccess().getBLTerminalRuleCall_1_4());
		match_HeaderDepth1Expression_BLTerminalRuleCall_0_5_q = new TokenAlias(false, true, grammarAccess.getHeaderDepth1ExpressionAccess().getBLTerminalRuleCall_0_5());
		match_HeaderDepth1Expression_BLTerminalRuleCall_1_3_q = new TokenAlias(false, true, grammarAccess.getHeaderDepth1ExpressionAccess().getBLTerminalRuleCall_1_3());
		match_HeaderDepth1Expression_EqualsSignKeyword_1_2_p = new TokenAlias(true, false, grammarAccess.getHeaderDepth1ExpressionAccess().getEqualsSignKeyword_1_2());
		match_HeaderDepth1Expression_NumberSignKeyword_0_3_a = new TokenAlias(true, true, grammarAccess.getHeaderDepth1ExpressionAccess().getNumberSignKeyword_0_3());
		match_HeaderDepth1Expression_STerminalRuleCall_0_1_p = new TokenAlias(true, false, grammarAccess.getHeaderDepth1ExpressionAccess().getSTerminalRuleCall_0_1());
		match_HeaderDepth1Expression_STerminalRuleCall_0_4_a = new TokenAlias(true, true, grammarAccess.getHeaderDepth1ExpressionAccess().getSTerminalRuleCall_0_4());
		match_HeaderDepth2Expression_BLTerminalRuleCall_0_3_q = new TokenAlias(false, true, grammarAccess.getHeaderDepth2ExpressionAccess().getBLTerminalRuleCall_0_3());
		match_HeaderDepth2Expression_BLTerminalRuleCall_1_3_q = new TokenAlias(false, true, grammarAccess.getHeaderDepth2ExpressionAccess().getBLTerminalRuleCall_1_3());
		match_HeaderDepth2Expression_HyphenMinusKeyword_1_2_p = new TokenAlias(true, false, grammarAccess.getHeaderDepth2ExpressionAccess().getHyphenMinusKeyword_1_2());
		match_HeaderDepth2Expression_NumberSignKeyword_0_2_a = new TokenAlias(true, true, grammarAccess.getHeaderDepth2ExpressionAccess().getNumberSignKeyword_0_2());
		match_HeaderDepth3Expression_BLTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getHeaderDepth3ExpressionAccess().getBLTerminalRuleCall_3());
		match_HeaderDepth3Expression_NumberSignKeyword_2_a = new TokenAlias(true, true, grammarAccess.getHeaderDepth3ExpressionAccess().getNumberSignKeyword_2());
		match_HeaderDepth4Expression_BLTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getHeaderDepth4ExpressionAccess().getBLTerminalRuleCall_3());
		match_HeaderDepth4Expression_NumberSignKeyword_2_a = new TokenAlias(true, true, grammarAccess.getHeaderDepth4ExpressionAccess().getNumberSignKeyword_2());
		match_HeaderDepth5Expression_BLTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getHeaderDepth5ExpressionAccess().getBLTerminalRuleCall_3());
		match_HeaderDepth5Expression_NumberSignKeyword_2_a = new TokenAlias(true, true, grammarAccess.getHeaderDepth5ExpressionAccess().getNumberSignKeyword_2());
		match_HeaderDepth6Expression_BLTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getHeaderDepth6ExpressionAccess().getBLTerminalRuleCall_3());
		match_HeaderDepth6Expression_NumberSignKeyword_2_a = new TokenAlias(true, true, grammarAccess.getHeaderDepth6ExpressionAccess().getNumberSignKeyword_2());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getBLRule())
			return getBLToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSRule())
			return getSToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal BL: '\n';
	 */
	protected String getBLToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\n";
	}
	
	/**
	 * terminal S: ' '| '\t';
	 */
	protected String getSToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return " ";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_CodeExpression_BLTerminalRuleCall_1_4_q.equals(syntax))
				emit_CodeExpression_BLTerminalRuleCall_1_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth1Expression_BLTerminalRuleCall_0_5_q.equals(syntax))
				emit_HeaderDepth1Expression_BLTerminalRuleCall_0_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth1Expression_BLTerminalRuleCall_1_3_q.equals(syntax))
				emit_HeaderDepth1Expression_BLTerminalRuleCall_1_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth1Expression_EqualsSignKeyword_1_2_p.equals(syntax))
				emit_HeaderDepth1Expression_EqualsSignKeyword_1_2_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth1Expression_NumberSignKeyword_0_3_a.equals(syntax))
				emit_HeaderDepth1Expression_NumberSignKeyword_0_3_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth1Expression_STerminalRuleCall_0_1_p.equals(syntax))
				emit_HeaderDepth1Expression_STerminalRuleCall_0_1_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth1Expression_STerminalRuleCall_0_4_a.equals(syntax))
				emit_HeaderDepth1Expression_STerminalRuleCall_0_4_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth2Expression_BLTerminalRuleCall_0_3_q.equals(syntax))
				emit_HeaderDepth2Expression_BLTerminalRuleCall_0_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth2Expression_BLTerminalRuleCall_1_3_q.equals(syntax))
				emit_HeaderDepth2Expression_BLTerminalRuleCall_1_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth2Expression_HyphenMinusKeyword_1_2_p.equals(syntax))
				emit_HeaderDepth2Expression_HyphenMinusKeyword_1_2_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth2Expression_NumberSignKeyword_0_2_a.equals(syntax))
				emit_HeaderDepth2Expression_NumberSignKeyword_0_2_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth3Expression_BLTerminalRuleCall_3_q.equals(syntax))
				emit_HeaderDepth3Expression_BLTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth3Expression_NumberSignKeyword_2_a.equals(syntax))
				emit_HeaderDepth3Expression_NumberSignKeyword_2_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth4Expression_BLTerminalRuleCall_3_q.equals(syntax))
				emit_HeaderDepth4Expression_BLTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth4Expression_NumberSignKeyword_2_a.equals(syntax))
				emit_HeaderDepth4Expression_NumberSignKeyword_2_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth5Expression_BLTerminalRuleCall_3_q.equals(syntax))
				emit_HeaderDepth5Expression_BLTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth5Expression_NumberSignKeyword_2_a.equals(syntax))
				emit_HeaderDepth5Expression_NumberSignKeyword_2_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth6Expression_BLTerminalRuleCall_3_q.equals(syntax))
				emit_HeaderDepth6Expression_BLTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HeaderDepth6Expression_NumberSignKeyword_2_a.equals(syntax))
				emit_HeaderDepth6Expression_NumberSignKeyword_2_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     text=String0 '```' (ambiguity) (rule end)
	 */
	protected void emit_CodeExpression_BLTerminalRuleCall_1_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression '#'* S* (ambiguity) (rule end)
	 */
	protected void emit_HeaderDepth1Expression_BLTerminalRuleCall_0_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression BL '='+ (ambiguity) (rule end)
	 */
	protected void emit_HeaderDepth1Expression_BLTerminalRuleCall_1_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '='+
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression BL (ambiguity) BL? (rule end)
	 */
	protected void emit_HeaderDepth1Expression_EqualsSignKeyword_1_2_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression (ambiguity) S* BL? (rule end)
	 */
	protected void emit_HeaderDepth1Expression_NumberSignKeyword_0_3_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     S+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '#' (ambiguity) title=EmphasisExpression
	 */
	protected void emit_HeaderDepth1Expression_STerminalRuleCall_0_1_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     S*
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression '#'* (ambiguity) BL? (rule end)
	 */
	protected void emit_HeaderDepth1Expression_STerminalRuleCall_0_4_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_HeaderDepth2Expression_BLTerminalRuleCall_0_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression BL '-'+ (ambiguity) (rule end)
	 */
	protected void emit_HeaderDepth2Expression_BLTerminalRuleCall_1_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '-'+
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression BL (ambiguity) BL? (rule end)
	 */
	protected void emit_HeaderDepth2Expression_HyphenMinusKeyword_1_2_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_HeaderDepth2Expression_NumberSignKeyword_0_2_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_HeaderDepth3Expression_BLTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_HeaderDepth3Expression_NumberSignKeyword_2_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_HeaderDepth4Expression_BLTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_HeaderDepth4Expression_NumberSignKeyword_2_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_HeaderDepth5Expression_BLTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_HeaderDepth5Expression_NumberSignKeyword_2_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_HeaderDepth6Expression_BLTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_HeaderDepth6Expression_NumberSignKeyword_2_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
