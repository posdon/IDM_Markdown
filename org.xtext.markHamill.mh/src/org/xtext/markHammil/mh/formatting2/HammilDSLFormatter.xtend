/*
 * generated by Xtext 2.12.0
 */
package org.xtext.markHammil.mh.formatting2

import com.google.inject.Inject
import markdown.Expression
import markdown.File
import markdown.HeaderDepth1Expression
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.markHammil.mh.services.HammilDSLGrammarAccess

class HammilDSLFormatter extends AbstractFormatter2 {
	
	@Inject extension HammilDSLGrammarAccess

	def dispatch void format(File file, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Expression expression : file.getExpression()) {
			expression.format;
		}
	}

	def dispatch void format(HeaderDepth1Expression headerDepth1Expression, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		headerDepth1Expression.getTitle.format;
	}
	
	// TODO: implement for 
}
