/*
 * generated by Xtext 2.12.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package markHammil.mm.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package markHammil.mm.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import markHammil.mm.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "File";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleFile
entryRuleFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFileRule()); }
	iv_ruleFile=ruleFile
	{ $current=$iv_ruleFile.current; }
	EOF;

// Rule File
ruleFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFileAccess().getFileAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFileAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFileRule());
					}
					add(
						$current,
						"expression",
						lv_expression_1_0,
						"markHammil.mm.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				((
					ruleHeaderExpression
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getCHeaderExpressionParserRuleCall_0_0_0());
					}
					lv_c_0_0=ruleHeaderExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"c",
							lv_c_0_0,
							"markHammil.mm.MyDsl.HeaderExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getCBreakLineExpressionParserRuleCall_0_1_0());
					}
					lv_c_1_0=ruleBreakLineExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"c",
							lv_c_1_0,
							"markHammil.mm.MyDsl.BreakLineExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getCRefExpressionParserRuleCall_0_2_0());
					}
					lv_c_2_0=ruleRefExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"c",
							lv_c_2_0,
							"markHammil.mm.MyDsl.RefExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionAccess().getCListExpressionParserRuleCall_0_3_0_0());
						}
						lv_c_3_0=ruleListExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionRule());
							}
							set(
								$current,
								"c",
								lv_c_3_0,
								"markHammil.mm.MyDsl.ListExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(RULE_BL)=>
					this_BL_4=RULE_BL
					{
						newLeafNode(this_BL_4, grammarAccess.getExpressionAccess().getBLTerminalRuleCall_0_3_1());
					}
				)?
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getCTextExpressionParserRuleCall_1_0_0());
					}
					lv_c_5_0=ruleTextExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"c",
							lv_c_5_0,
							"markHammil.mm.MyDsl.TextExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(RULE_BL)=>
				this_BL_6=RULE_BL
				{
					newLeafNode(this_BL_6, grammarAccess.getExpressionAccess().getBLTerminalRuleCall_1_1());
				}
			)?
		)
	)
;

// Entry rule entryRuleBreakLineExpression
entryRuleBreakLineExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBreakLineExpressionRule()); }
	iv_ruleBreakLineExpression=ruleBreakLineExpression
	{ $current=$iv_ruleBreakLineExpression.current; }
	EOF;

// Rule BreakLineExpression
ruleBreakLineExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBreakLineExpressionAccess().getBreakLineExpressionAction_0(),
					$current);
			}
		)
		this_BL_1=RULE_BL
		{
			newLeafNode(this_BL_1, grammarAccess.getBreakLineExpressionAccess().getBLTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTextExpression
entryRuleTextExpression returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}:
	{ newCompositeNode(grammarAccess.getTextExpressionRule()); }
	iv_ruleTextExpression=ruleTextExpression
	{ $current=$iv_ruleTextExpression.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule TextExpression
ruleTextExpression returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTextExpressionAccess().getEmphasisExpressionParserRuleCall_0());
		}
		this_EmphasisExpression_0=ruleEmphasisExpression
		{
			$current = $this_EmphasisExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				ruleQuoteExpression
				    |
				ruleTabExpression
				    |
				(
					((
						ruleLinkExpression
						    |
						(
							((
								ruleImageExpression
								    |
								(
									(ruleVideoExpression)=>
									ruleVideoExpression
								)
							)
							)=>
							(
								ruleImageExpression
								    |
								(
									(ruleVideoExpression)=>
									ruleVideoExpression
								)
							)
						)
					)
					)=>
					(
						ruleLinkExpression
						    |
						(
							((
								ruleImageExpression
								    |
								(
									(ruleVideoExpression)=>
									ruleVideoExpression
								)
							)
							)=>
							(
								ruleImageExpression
								    |
								(
									(ruleVideoExpression)=>
									ruleVideoExpression
								)
							)
						)
					)
				)
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getTextExpressionAccess().getQuoteExpressionParserRuleCall_1_0_0());
				}
				this_QuoteExpression_1=ruleQuoteExpression
				{
					$current = $this_QuoteExpression_1.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getTextExpressionAccess().getTabExpressionParserRuleCall_1_0_1());
				}
				this_TabExpression_2=ruleTabExpression
				{
					$current = $this_TabExpression_2.current;
					afterParserOrEnumRuleCall();
				}
				    |
				(
					((
						ruleLinkExpression
						    |
						(
							((
								ruleImageExpression
								    |
								(
									(ruleVideoExpression)=>
									ruleVideoExpression
								)
							)
							)=>
							(
								ruleImageExpression
								    |
								(
									(ruleVideoExpression)=>
									ruleVideoExpression
								)
							)
						)
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getTextExpressionAccess().getLinkExpressionParserRuleCall_1_0_2_0_0());
						}
						this_LinkExpression_3=ruleLinkExpression
						{
							$current = $this_LinkExpression_3.current;
							afterParserOrEnumRuleCall();
						}
						    |
						(
							((
								ruleImageExpression
								    |
								(
									(ruleVideoExpression)=>
									ruleVideoExpression
								)
							)
							)=>
							(
								{
									newCompositeNode(grammarAccess.getTextExpressionAccess().getImageExpressionParserRuleCall_1_0_2_0_1_0_0());
								}
								this_ImageExpression_4=ruleImageExpression
								{
									$current = $this_ImageExpression_4.current;
									afterParserOrEnumRuleCall();
								}
								    |
								(
									(ruleVideoExpression)=>
									{
										newCompositeNode(grammarAccess.getTextExpressionAccess().getVideoExpressionParserRuleCall_1_0_2_0_1_0_1());
									}
									this_VideoExpression_5=ruleVideoExpression
									{
										$current = $this_VideoExpression_5.current;
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
					)
				)
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleListExpression
entryRuleListExpression returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getListExpressionRule()); }
	iv_ruleListExpression=ruleListExpression
	{ $current=$iv_ruleListExpression.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ListExpression
ruleListExpression returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getListExpressionAccess().getListExpressionAction_0_0(),
						$current);
				}
			)
			(
				(
					otherlv_1='*'
					{
						newLeafNode(otherlv_1, grammarAccess.getListExpressionAccess().getAsteriskKeyword_0_1_0_0());
					}
					    |
					otherlv_2='-'
					{
						newLeafNode(otherlv_2, grammarAccess.getListExpressionAccess().getHyphenMinusKeyword_0_1_0_1());
					}
					    |
					otherlv_3='+'
					{
						newLeafNode(otherlv_3, grammarAccess.getListExpressionAccess().getPlusSignKeyword_0_1_0_2());
					}
				)
				(
					this_WS_4=RULE_WS
					{
						newLeafNode(this_WS_4, grammarAccess.getListExpressionAccess().getWSTerminalRuleCall_0_1_1());
					}
				)+
				(
					(
						{
							newCompositeNode(grammarAccess.getListExpressionAccess().getContentUnorderedTextExpressionParserRuleCall_0_1_2_0());
						}
						lv_contentUnordered_5_0=ruleTextExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListExpressionRule());
							}
							add(
								$current,
								"contentUnordered",
								lv_contentUnordered_5_0,
								"markHammil.mm.MyDsl.TextExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(RULE_BL)=>
					this_BL_6=RULE_BL
					{
						newLeafNode(this_BL_6, grammarAccess.getListExpressionAccess().getBLTerminalRuleCall_0_1_3());
					}
				)?
			)+
		)
		    |
		(
			this_INT_7=RULE_INT
			{
				newLeafNode(this_INT_7, grammarAccess.getListExpressionAccess().getINTTerminalRuleCall_1_0());
			}
			otherlv_8='.'
			{
				newLeafNode(otherlv_8, grammarAccess.getListExpressionAccess().getFullStopKeyword_1_1());
			}
			(
				this_WS_9=RULE_WS
				{
					newLeafNode(this_WS_9, grammarAccess.getListExpressionAccess().getWSTerminalRuleCall_1_2());
				}
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getListExpressionAccess().getContentOrderedTextExpressionParserRuleCall_1_3_0());
					}
					lv_contentOrdered_10_0=ruleTextExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListExpressionRule());
						}
						add(
							$current,
							"contentOrdered",
							lv_contentOrdered_10_0,
							"markHammil.mm.MyDsl.TextExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(RULE_BL)=>
				this_BL_11=RULE_BL
				{
					newLeafNode(this_BL_11, grammarAccess.getListExpressionAccess().getBLTerminalRuleCall_1_4());
				}
			)?
		)+
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleQuoteExpression
entryRuleQuoteExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuoteExpressionRule()); }
	iv_ruleQuoteExpression=ruleQuoteExpression
	{ $current=$iv_ruleQuoteExpression.current; }
	EOF;

// Rule QuoteExpression
ruleQuoteExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getQuoteExpressionAccess().getQuoteExpressionAction_0(),
					$current);
			}
		)
		(
			('>')=>
			otherlv_1='>'
			{
				newLeafNode(otherlv_1, grammarAccess.getQuoteExpressionAccess().getGreaterThanSignKeyword_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getQuoteExpressionAccess().getContentTextExpressionParserRuleCall_2_0());
				}
				lv_content_2_0=ruleTextExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuoteExpressionRule());
					}
					add(
						$current,
						"content",
						lv_content_2_0,
						"markHammil.mm.MyDsl.TextExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(RULE_BL)=>
			this_BL_3=RULE_BL
			{
				newLeafNode(this_BL_3, grammarAccess.getQuoteExpressionAccess().getBLTerminalRuleCall_3());
			}
		)?
	)
;

// Entry rule entryRuleRefExpression
entryRuleRefExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefExpressionRule()); }
	iv_ruleRefExpression=ruleRefExpression
	{ $current=$iv_ruleRefExpression.current; }
	EOF;

// Rule RefExpression
ruleRefExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRefExpressionAccess().getRefExpressionAction_0(),
					$current);
			}
		)
		(
			('[')=>
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getRefExpressionAccess().getLeftSquareBracketKeyword_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRefExpressionAccess().getRefNameNaturalExpressionParserRuleCall_2_0());
				}
				lv_refName_2_0=ruleNaturalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRefExpressionRule());
					}
					set(
						$current,
						"refName",
						lv_refName_2_0,
						"markHammil.mm.MyDsl.NaturalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(']:')=>
			otherlv_3=']:'
			{
				newLeafNode(otherlv_3, grammarAccess.getRefExpressionAccess().getRightSquareBracketColonKeyword_3());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRefExpressionAccess().getRefContentNaturalExpressionParserRuleCall_4_0());
				}
				lv_refContent_4_0=ruleNaturalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRefExpressionRule());
					}
					set(
						$current,
						"refContent",
						lv_refContent_4_0,
						"markHammil.mm.MyDsl.NaturalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(RULE_BL)=>
			this_BL_5=RULE_BL
			{
				newLeafNode(this_BL_5, grammarAccess.getRefExpressionAccess().getBLTerminalRuleCall_5());
			}
		)?
	)
;

// Entry rule entryRuleLinkExpression
entryRuleLinkExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkExpressionRule()); }
	iv_ruleLinkExpression=ruleLinkExpression
	{ $current=$iv_ruleLinkExpression.current; }
	EOF;

// Rule LinkExpression
ruleLinkExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLinkExpressionAccess().getLinkExpressionAction_0_0(),
						$current);
				}
			)
			(
				('[')=>
				otherlv_1='['
				{
					newLeafNode(otherlv_1, grammarAccess.getLinkExpressionAccess().getLeftSquareBracketKeyword_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkExpressionAccess().getAltTextNaturalExpressionParserRuleCall_0_2_0());
					}
					lv_altText_2_0=ruleNaturalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkExpressionRule());
						}
						set(
							$current,
							"altText",
							lv_altText_2_0,
							"markHammil.mm.MyDsl.NaturalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				('](')=>
				otherlv_3=']('
				{
					newLeafNode(otherlv_3, grammarAccess.getLinkExpressionAccess().getRightSquareBracketLeftParenthesisKeyword_0_3());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkExpressionAccess().getLinkContentNaturalExpressionParserRuleCall_0_4_0());
					}
					lv_linkContent_4_0=ruleNaturalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkExpressionRule());
						}
						set(
							$current,
							"linkContent",
							lv_linkContent_4_0,
							"markHammil.mm.MyDsl.NaturalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(')')=>
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getLinkExpressionAccess().getRightParenthesisKeyword_0_5());
				}
			)
			(
				(RULE_BL)=>
				this_BL_6=RULE_BL
				{
					newLeafNode(this_BL_6, grammarAccess.getLinkExpressionAccess().getBLTerminalRuleCall_0_6());
				}
			)?
		)
		    |
		(
			(
				('[')=>
				otherlv_7='['
				{
					newLeafNode(otherlv_7, grammarAccess.getLinkExpressionAccess().getLeftSquareBracketKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkExpressionAccess().getAltTextNaturalExpressionParserRuleCall_1_1_0());
					}
					lv_altText_8_0=ruleNaturalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkExpressionRule());
						}
						set(
							$current,
							"altText",
							lv_altText_8_0,
							"markHammil.mm.MyDsl.NaturalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				('][')=>
				otherlv_9=']['
				{
					newLeafNode(otherlv_9, grammarAccess.getLinkExpressionAccess().getRightSquareBracketLeftSquareBracketKeyword_1_2());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkExpressionAccess().getRefNameNaturalExpressionParserRuleCall_1_3_0());
					}
					lv_refName_10_0=ruleNaturalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkExpressionRule());
						}
						set(
							$current,
							"refName",
							lv_refName_10_0,
							"markHammil.mm.MyDsl.NaturalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(']')=>
				otherlv_11=']'
				{
					newLeafNode(otherlv_11, grammarAccess.getLinkExpressionAccess().getRightSquareBracketKeyword_1_4());
				}
			)
			(
				(RULE_BL)=>
				this_BL_12=RULE_BL
				{
					newLeafNode(this_BL_12, grammarAccess.getLinkExpressionAccess().getBLTerminalRuleCall_1_5());
				}
			)?
		)
	)
;

// Entry rule entryRuleImageExpression
entryRuleImageExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageExpressionRule()); }
	iv_ruleImageExpression=ruleImageExpression
	{ $current=$iv_ruleImageExpression.current; }
	EOF;

// Rule ImageExpression
ruleImageExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getImageExpressionAccess().getImageExpressionAction_0(),
					$current);
			}
		)
		(
			('![')=>
			otherlv_1='!['
			{
				newLeafNode(otherlv_1, grammarAccess.getImageExpressionAccess().getExclamationMarkLeftSquareBracketKeyword_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImageExpressionAccess().getAltTextNaturalExpressionParserRuleCall_2_0());
				}
				lv_altText_2_0=ruleNaturalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImageExpressionRule());
					}
					set(
						$current,
						"altText",
						lv_altText_2_0,
						"markHammil.mm.MyDsl.NaturalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('](')=>
			otherlv_3=']('
			{
				newLeafNode(otherlv_3, grammarAccess.getImageExpressionAccess().getRightSquareBracketLeftParenthesisKeyword_3());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImageExpressionAccess().getLinkContentNaturalExpressionParserRuleCall_4_0());
				}
				lv_linkContent_4_0=ruleNaturalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImageExpressionRule());
					}
					set(
						$current,
						"linkContent",
						lv_linkContent_4_0,
						"markHammil.mm.MyDsl.NaturalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(')')=>
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getImageExpressionAccess().getRightParenthesisKeyword_5());
			}
		)
		(
			(RULE_BL)=>
			this_BL_6=RULE_BL
			{
				newLeafNode(this_BL_6, grammarAccess.getImageExpressionAccess().getBLTerminalRuleCall_6());
			}
		)?
	)
;

// Entry rule entryRuleVideoExpression
entryRuleVideoExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVideoExpressionRule()); }
	iv_ruleVideoExpression=ruleVideoExpression
	{ $current=$iv_ruleVideoExpression.current; }
	EOF;

// Rule VideoExpression
ruleVideoExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVideoExpressionAccess().getVideoExpressionAction_0(),
					$current);
			}
		)
		(
			('[![')=>
			otherlv_1='[!['
			{
				newLeafNode(otherlv_1, grammarAccess.getVideoExpressionAccess().getLeftSquareBracketExclamationMarkLeftSquareBracketKeyword_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVideoExpressionAccess().getAltTextNaturalExpressionParserRuleCall_2_0());
				}
				lv_altText_2_0=ruleNaturalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVideoExpressionRule());
					}
					set(
						$current,
						"altText",
						lv_altText_2_0,
						"markHammil.mm.MyDsl.NaturalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('](')=>
			otherlv_3=']('
			{
				newLeafNode(otherlv_3, grammarAccess.getVideoExpressionAccess().getRightSquareBracketLeftParenthesisKeyword_3());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVideoExpressionAccess().getLinkImageNaturalExpressionParserRuleCall_4_0());
				}
				lv_linkImage_4_0=ruleNaturalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVideoExpressionRule());
					}
					set(
						$current,
						"linkImage",
						lv_linkImage_4_0,
						"markHammil.mm.MyDsl.NaturalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(')](')=>
			otherlv_5=')]('
			{
				newLeafNode(otherlv_5, grammarAccess.getVideoExpressionAccess().getRightParenthesisRightSquareBracketLeftParenthesisKeyword_5());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVideoExpressionAccess().getLinkVideoNaturalExpressionParserRuleCall_6_0());
				}
				lv_linkVideo_6_0=ruleNaturalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVideoExpressionRule());
					}
					set(
						$current,
						"linkVideo",
						lv_linkVideo_6_0,
						"markHammil.mm.MyDsl.NaturalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(')')=>
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getVideoExpressionAccess().getRightParenthesisKeyword_7());
			}
		)
		(
			(RULE_BL)=>
			this_BL_8=RULE_BL
			{
				newLeafNode(this_BL_8, grammarAccess.getVideoExpressionAccess().getBLTerminalRuleCall_8());
			}
		)?
	)
;

// Entry rule entryRuleTabExpression
entryRuleTabExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTabExpressionRule()); }
	iv_ruleTabExpression=ruleTabExpression
	{ $current=$iv_ruleTabExpression.current; }
	EOF;

// Rule TabExpression
ruleTabExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTabExpressionAccess().getTabExpressionAction_0(),
					$current);
			}
		)
		(
			((
				(
					('|')=>
					(
						ruleLineExpression
					)
				)
				RULE_BL
				ruleTabSeparation
				(
					((
						RULE_BL
						(
							((
								ruleLineExpression
							)
							)=>
							(
								ruleLineExpression
							)
						)
					)
					)=>
					(
						RULE_BL
						(
							((
								ruleLineExpression
							)
							)=>
							(
								ruleLineExpression
							)
						)
					)
				)*
			)
			)=>
			(
				(
					('|')=>
					(
						{
							newCompositeNode(grammarAccess.getTabExpressionAccess().getHeaderLineExpressionParserRuleCall_1_0_0_0());
						}
						lv_header_1_0=ruleLineExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTabExpressionRule());
							}
							set(
								$current,
								"header",
								lv_header_1_0,
								"markHammil.mm.MyDsl.LineExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				this_BL_2=RULE_BL
				{
					newLeafNode(this_BL_2, grammarAccess.getTabExpressionAccess().getBLTerminalRuleCall_1_0_1());
				}
				{
					newCompositeNode(grammarAccess.getTabExpressionAccess().getTabSeparationParserRuleCall_1_0_2());
				}
				ruleTabSeparation
				{
					afterParserOrEnumRuleCall();
				}
				(
					((
						RULE_BL
						(
							((
								ruleLineExpression
							)
							)=>
							(
								ruleLineExpression
							)
						)
					)
					)=>
					(
						this_BL_4=RULE_BL
						{
							newLeafNode(this_BL_4, grammarAccess.getTabExpressionAccess().getBLTerminalRuleCall_1_0_3_0_0());
						}
						(
							((
								ruleLineExpression
							)
							)=>
							(
								{
									newCompositeNode(grammarAccess.getTabExpressionAccess().getLinesLineExpressionParserRuleCall_1_0_3_0_1_0());
								}
								lv_lines_5_0=ruleLineExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getTabExpressionRule());
									}
									add(
										$current,
										"lines",
										lv_lines_5_0,
										"markHammil.mm.MyDsl.LineExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)*
			)
		)
	)
;

// Entry rule entryRuleTabSeparation
entryRuleTabSeparation returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTabSeparationRule()); }
	iv_ruleTabSeparation=ruleTabSeparation
	{ $current=$iv_ruleTabSeparation.current.getText(); }
	EOF;

// Rule TabSeparation
ruleTabSeparation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='|'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTabSeparationAccess().getVerticalLineKeyword_0());
			}
		)?
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_1());
		}
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_2());
			}
		)+
		(
			kw='|'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTabSeparationAccess().getVerticalLineKeyword_3_0());
			}
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_3_1());
			}
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getTabSeparationAccess().getHyphenMinusKeyword_3_2());
				}
			)+
		)+
		(
			kw='|'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTabSeparationAccess().getVerticalLineKeyword_4());
			}
		)?
	)
;

// Entry rule entryRuleLineExpression
entryRuleLineExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineExpressionRule()); }
	iv_ruleLineExpression=ruleLineExpression
	{ $current=$iv_ruleLineExpression.current; }
	EOF;

// Rule LineExpression
ruleLineExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('|')=>
			otherlv_0='|'
			{
				newLeafNode(otherlv_0, grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_0());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLineExpressionAccess().getCellsNaturalExpressionParserRuleCall_1_0());
				}
				lv_cells_1_0=ruleNaturalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLineExpressionRule());
					}
					add(
						$current,
						"cells",
						lv_cells_1_0,
						"markHammil.mm.MyDsl.NaturalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('|')=>
				otherlv_2='|'
				{
					newLeafNode(otherlv_2, grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_2_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLineExpressionAccess().getCellsNaturalExpressionParserRuleCall_2_1_0());
					}
					lv_cells_3_0=ruleNaturalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLineExpressionRule());
						}
						add(
							$current,
							"cells",
							lv_cells_3_0,
							"markHammil.mm.MyDsl.NaturalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			('|')=>
			otherlv_4='|'
			{
				newLeafNode(otherlv_4, grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_3());
			}
		)?
	)
;

// Entry rule entryRuleHeaderExpression
entryRuleHeaderExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeaderExpressionRule()); }
	iv_ruleHeaderExpression=ruleHeaderExpression
	{ $current=$iv_ruleHeaderExpression.current; }
	EOF;

// Rule HeaderExpression
ruleHeaderExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getHeaderExpressionAccess().getHeader1ExpressionParserRuleCall_0());
		}
		this_Header1Expression_0=ruleHeader1Expression
		{
			$current = $this_Header1Expression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getHeaderExpressionAccess().getHeader2ExpressionParserRuleCall_1());
		}
		this_Header2Expression_1=ruleHeader2Expression
		{
			$current = $this_Header2Expression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getHeaderExpressionAccess().getHeader3ExpressionParserRuleCall_2());
		}
		this_Header3Expression_2=ruleHeader3Expression
		{
			$current = $this_Header3Expression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getHeaderExpressionAccess().getHeader4ExpressionParserRuleCall_3());
		}
		this_Header4Expression_3=ruleHeader4Expression
		{
			$current = $this_Header4Expression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getHeaderExpressionAccess().getHeader5ExpressionParserRuleCall_4());
		}
		this_Header5Expression_4=ruleHeader5Expression
		{
			$current = $this_Header5Expression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getHeaderExpressionAccess().getHeader6ExpressionParserRuleCall_5());
		}
		this_Header6Expression_5=ruleHeader6Expression
		{
			$current = $this_Header6Expression_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleHeader1Expression
entryRuleHeader1Expression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeader1ExpressionRule()); }
	iv_ruleHeader1Expression=ruleHeader1Expression
	{ $current=$iv_ruleHeader1Expression.current; }
	EOF;

// Rule Header1Expression
ruleHeader1Expression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHeader1ExpressionAccess().getHeader1ExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='#'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeader1ExpressionAccess().getNumberSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHeader1ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0());
				}
				lv_title_2_0=ruleEmphasisExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeader1ExpressionRule());
					}
					add(
						$current,
						"title",
						lv_title_2_0,
						"markHammil.mm.MyDsl.EmphasisExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('#'
			)=>
			otherlv_3='#'
			{
				newLeafNode(otherlv_3, grammarAccess.getHeader1ExpressionAccess().getNumberSignKeyword_3_0());
			}
		)*
		(
			(RULE_BL)=>
			this_BL_4=RULE_BL
			{
				newLeafNode(this_BL_4, grammarAccess.getHeader1ExpressionAccess().getBLTerminalRuleCall_4());
			}
		)?
	)
;

// Entry rule entryRuleHeader2Expression
entryRuleHeader2Expression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeader2ExpressionRule()); }
	iv_ruleHeader2Expression=ruleHeader2Expression
	{ $current=$iv_ruleHeader2Expression.current; }
	EOF;

// Rule Header2Expression
ruleHeader2Expression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHeader2ExpressionAccess().getHeader2ExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='##'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeader2ExpressionAccess().getNumberSignNumberSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHeader2ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0());
				}
				lv_title_2_0=ruleEmphasisExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeader2ExpressionRule());
					}
					add(
						$current,
						"title",
						lv_title_2_0,
						"markHammil.mm.MyDsl.EmphasisExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('#'
			)=>
			otherlv_3='#'
			{
				newLeafNode(otherlv_3, grammarAccess.getHeader2ExpressionAccess().getNumberSignKeyword_3_0());
			}
		)*
		(
			(RULE_BL)=>
			this_BL_4=RULE_BL
			{
				newLeafNode(this_BL_4, grammarAccess.getHeader2ExpressionAccess().getBLTerminalRuleCall_4());
			}
		)?
	)
;

// Entry rule entryRuleHeader3Expression
entryRuleHeader3Expression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeader3ExpressionRule()); }
	iv_ruleHeader3Expression=ruleHeader3Expression
	{ $current=$iv_ruleHeader3Expression.current; }
	EOF;

// Rule Header3Expression
ruleHeader3Expression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHeader3ExpressionAccess().getHeader3ExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='###'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeader3ExpressionAccess().getNumberSignNumberSignNumberSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHeader3ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0());
				}
				lv_title_2_0=ruleEmphasisExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeader3ExpressionRule());
					}
					add(
						$current,
						"title",
						lv_title_2_0,
						"markHammil.mm.MyDsl.EmphasisExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('#'
			)=>
			otherlv_3='#'
			{
				newLeafNode(otherlv_3, grammarAccess.getHeader3ExpressionAccess().getNumberSignKeyword_3_0());
			}
		)*
		(
			(RULE_BL)=>
			this_BL_4=RULE_BL
			{
				newLeafNode(this_BL_4, grammarAccess.getHeader3ExpressionAccess().getBLTerminalRuleCall_4());
			}
		)?
	)
;

// Entry rule entryRuleHeader4Expression
entryRuleHeader4Expression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeader4ExpressionRule()); }
	iv_ruleHeader4Expression=ruleHeader4Expression
	{ $current=$iv_ruleHeader4Expression.current; }
	EOF;

// Rule Header4Expression
ruleHeader4Expression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHeader4ExpressionAccess().getHeader4ExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='####'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeader4ExpressionAccess().getNumberSignNumberSignNumberSignNumberSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHeader4ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0());
				}
				lv_title_2_0=ruleEmphasisExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeader4ExpressionRule());
					}
					add(
						$current,
						"title",
						lv_title_2_0,
						"markHammil.mm.MyDsl.EmphasisExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('#'
			)=>
			otherlv_3='#'
			{
				newLeafNode(otherlv_3, grammarAccess.getHeader4ExpressionAccess().getNumberSignKeyword_3_0());
			}
		)*
		(
			(RULE_BL)=>
			this_BL_4=RULE_BL
			{
				newLeafNode(this_BL_4, grammarAccess.getHeader4ExpressionAccess().getBLTerminalRuleCall_4());
			}
		)?
	)
;

// Entry rule entryRuleHeader5Expression
entryRuleHeader5Expression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeader5ExpressionRule()); }
	iv_ruleHeader5Expression=ruleHeader5Expression
	{ $current=$iv_ruleHeader5Expression.current; }
	EOF;

// Rule Header5Expression
ruleHeader5Expression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHeader5ExpressionAccess().getHeader5ExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='#####'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeader5ExpressionAccess().getNumberSignNumberSignNumberSignNumberSignNumberSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHeader5ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0());
				}
				lv_title_2_0=ruleEmphasisExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeader5ExpressionRule());
					}
					add(
						$current,
						"title",
						lv_title_2_0,
						"markHammil.mm.MyDsl.EmphasisExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('#'
			)=>
			otherlv_3='#'
			{
				newLeafNode(otherlv_3, grammarAccess.getHeader5ExpressionAccess().getNumberSignKeyword_3_0());
			}
		)*
		(
			(RULE_BL)=>
			this_BL_4=RULE_BL
			{
				newLeafNode(this_BL_4, grammarAccess.getHeader5ExpressionAccess().getBLTerminalRuleCall_4());
			}
		)?
	)
;

// Entry rule entryRuleHeader6Expression
entryRuleHeader6Expression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeader6ExpressionRule()); }
	iv_ruleHeader6Expression=ruleHeader6Expression
	{ $current=$iv_ruleHeader6Expression.current; }
	EOF;

// Rule Header6Expression
ruleHeader6Expression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHeader6ExpressionAccess().getHeader6ExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='######'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeader6ExpressionAccess().getNumberSignNumberSignNumberSignNumberSignNumberSignNumberSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHeader6ExpressionAccess().getTitleEmphasisExpressionParserRuleCall_2_0());
				}
				lv_title_2_0=ruleEmphasisExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeader6ExpressionRule());
					}
					add(
						$current,
						"title",
						lv_title_2_0,
						"markHammil.mm.MyDsl.EmphasisExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('#'
			)=>
			otherlv_3='#'
			{
				newLeafNode(otherlv_3, grammarAccess.getHeader6ExpressionAccess().getNumberSignKeyword_3_0());
			}
		)*
		(
			(RULE_BL)=>
			this_BL_4=RULE_BL
			{
				newLeafNode(this_BL_4, grammarAccess.getHeader6ExpressionAccess().getBLTerminalRuleCall_4());
			}
		)?
	)
;

// Entry rule entryRuleEmphasisExpression
entryRuleEmphasisExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmphasisExpressionRule()); }
	iv_ruleEmphasisExpression=ruleEmphasisExpression
	{ $current=$iv_ruleEmphasisExpression.current; }
	EOF;

// Rule EmphasisExpression
ruleEmphasisExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
					((
						ruleStrongExpression
					)
					)=>
					(
						ruleStrongExpression
					)
				)
				    |
				(
					(
						ruleItalicExpression
					)
				)
				    |
				(
					(
						ruleScratchExpression
					)
				)
			)
			)=>
			(
				(
					((
						ruleStrongExpression
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getEmphasisExpressionAccess().getCStrongExpressionParserRuleCall_0_0_0_0());
						}
						lv_c_0_0=ruleStrongExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEmphasisExpressionRule());
							}
							add(
								$current,
								"c",
								lv_c_0_0,
								"markHammil.mm.MyDsl.StrongExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getEmphasisExpressionAccess().getCItalicExpressionParserRuleCall_0_0_1_0());
						}
						lv_c_1_0=ruleItalicExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEmphasisExpressionRule());
							}
							add(
								$current,
								"c",
								lv_c_1_0,
								"markHammil.mm.MyDsl.ItalicExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getEmphasisExpressionAccess().getCScratchExpressionParserRuleCall_0_0_2_0());
						}
						lv_c_2_0=ruleScratchExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEmphasisExpressionRule());
							}
							add(
								$current,
								"c",
								lv_c_2_0,
								"markHammil.mm.MyDsl.ScratchExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getEmphasisExpressionAccess().getCNaturalExpressionParserRuleCall_1_0());
				}
				lv_c_3_0=ruleNaturalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEmphasisExpressionRule());
					}
					add(
						$current,
						"c",
						lv_c_3_0,
						"markHammil.mm.MyDsl.NaturalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)+
;

// Entry rule entryRuleStrongExpression
entryRuleStrongExpression returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getStrongExpressionRule()); }
	iv_ruleStrongExpression=ruleStrongExpression
	{ $current=$iv_ruleStrongExpression.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule StrongExpression
ruleStrongExpression returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStrongExpressionAccess().getStrongExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='**'
		{
			newLeafNode(otherlv_1, grammarAccess.getStrongExpressionAccess().getAsteriskAsteriskKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStrongExpressionAccess().getContentEmphasisExpressionParserRuleCall_2_0());
				}
				lv_content_2_0=ruleEmphasisExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStrongExpressionRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"markHammil.mm.MyDsl.EmphasisExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='**'
		{
			newLeafNode(otherlv_3, grammarAccess.getStrongExpressionAccess().getAsteriskAsteriskKeyword_3());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleItalicExpression
entryRuleItalicExpression returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getItalicExpressionRule()); }
	iv_ruleItalicExpression=ruleItalicExpression
	{ $current=$iv_ruleItalicExpression.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ItalicExpression
ruleItalicExpression returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getItalicExpressionAccess().getItalicExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='*'
		{
			newLeafNode(otherlv_1, grammarAccess.getItalicExpressionAccess().getAsteriskKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getItalicExpressionAccess().getContentEmphasisExpressionParserRuleCall_2_0());
				}
				lv_content_2_0=ruleEmphasisExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItalicExpressionRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"markHammil.mm.MyDsl.EmphasisExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='*'
		{
			newLeafNode(otherlv_3, grammarAccess.getItalicExpressionAccess().getAsteriskKeyword_3());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleScratchExpression
entryRuleScratchExpression returns [EObject current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getScratchExpressionRule()); }
	iv_ruleScratchExpression=ruleScratchExpression
	{ $current=$iv_ruleScratchExpression.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ScratchExpression
ruleScratchExpression returns [EObject current=null]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getScratchExpressionAccess().getScratchExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='~~'
		{
			newLeafNode(otherlv_1, grammarAccess.getScratchExpressionAccess().getTildeTildeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScratchExpressionAccess().getContentEmphasisExpressionParserRuleCall_2_0());
				}
				lv_content_2_0=ruleEmphasisExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScratchExpressionRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"markHammil.mm.MyDsl.EmphasisExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='~~'
		{
			newLeafNode(otherlv_3, grammarAccess.getScratchExpressionAccess().getTildeTildeKeyword_3());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleNaturalExpression
entryRuleNaturalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNaturalExpressionRule()); }
	iv_ruleNaturalExpression=ruleNaturalExpression
	{ $current=$iv_ruleNaturalExpression.current; }
	EOF;

// Rule NaturalExpression
ruleNaturalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNaturalExpressionAccess().getNaturalExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNaturalExpressionAccess().getValueContentParserRuleCall_1_0());
				}
				lv_value_1_0=ruleContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNaturalExpressionRule());
					}
					add(
						$current,
						"value",
						lv_value_1_0,
						"markHammil.mm.MyDsl.Content");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContent
entryRuleContent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	iv_ruleContent=ruleContent
	{ $current=$iv_ruleContent.current.getText(); }
	EOF;

// Rule Content
ruleContent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				RULE_ID
				    |
				RULE_STRING
				    |
				RULE_INT
			)
			)=>
			(
				this_ID_0=RULE_ID
				{
					$current.merge(this_ID_0);
				}
				{
					newLeafNode(this_ID_0, grammarAccess.getContentAccess().getIDTerminalRuleCall_0_0_0());
				}
				    |
				this_STRING_1=RULE_STRING
				{
					$current.merge(this_STRING_1);
				}
				{
					newLeafNode(this_STRING_1, grammarAccess.getContentAccess().getSTRINGTerminalRuleCall_0_0_1());
				}
				    |
				this_INT_2=RULE_INT
				{
					$current.merge(this_INT_2);
				}
				{
					newLeafNode(this_INT_2, grammarAccess.getContentAccess().getINTTerminalRuleCall_0_0_2());
				}
			)
		)
		    |
		kw='\''
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContentAccess().getApostropheKeyword_1());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContentAccess().getHyphenMinusKeyword_2());
		}
		    |
		kw='|'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContentAccess().getVerticalLineKeyword_3());
		}
		    |
		kw='"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContentAccess().getQuotationMarkKeyword_4());
		}
	)
;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_BL : '\r'? '\n';

RULE_WS : (' '|'\t');

fragment RULE_DIGIT : '0'..'9';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ANY_OTHER : .;
