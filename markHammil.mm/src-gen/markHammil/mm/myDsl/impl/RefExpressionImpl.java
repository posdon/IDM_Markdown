/**
 * generated by Xtext 2.12.0
 */
package markHammil.mm.myDsl.impl;

import markHammil.mm.myDsl.EmphasisExpression;
import markHammil.mm.myDsl.MyDslPackage;
import markHammil.mm.myDsl.RefExpression;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ref Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link markHammil.mm.myDsl.impl.RefExpressionImpl#getRefName <em>Ref Name</em>}</li>
 *   <li>{@link markHammil.mm.myDsl.impl.RefExpressionImpl#getRefContent <em>Ref Content</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RefExpressionImpl extends MinimalEObjectImpl.Container implements RefExpression
{
  /**
	 * The cached value of the '{@link #getRefName() <em>Ref Name</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getRefName()
	 * @generated
	 * @ordered
	 */
  protected EmphasisExpression refName;

  /**
	 * The cached value of the '{@link #getRefContent() <em>Ref Content</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getRefContent()
	 * @generated
	 * @ordered
	 */
  protected EmphasisExpression refContent;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected RefExpressionImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return MyDslPackage.Literals.REF_EXPRESSION;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public EmphasisExpression getRefName()
  {
		return refName;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetRefName(EmphasisExpression newRefName, NotificationChain msgs)
  {
		EmphasisExpression oldRefName = refName;
		refName = newRefName;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.REF_EXPRESSION__REF_NAME, oldRefName, newRefName);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void setRefName(EmphasisExpression newRefName)
  {
		if (newRefName != refName) {
			NotificationChain msgs = null;
			if (refName != null)
				msgs = ((InternalEObject)refName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REF_EXPRESSION__REF_NAME, null, msgs);
			if (newRefName != null)
				msgs = ((InternalEObject)newRefName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REF_EXPRESSION__REF_NAME, null, msgs);
			msgs = basicSetRefName(newRefName, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.REF_EXPRESSION__REF_NAME, newRefName, newRefName));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public EmphasisExpression getRefContent()
  {
		return refContent;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetRefContent(EmphasisExpression newRefContent, NotificationChain msgs)
  {
		EmphasisExpression oldRefContent = refContent;
		refContent = newRefContent;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.REF_EXPRESSION__REF_CONTENT, oldRefContent, newRefContent);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public void setRefContent(EmphasisExpression newRefContent)
  {
		if (newRefContent != refContent) {
			NotificationChain msgs = null;
			if (refContent != null)
				msgs = ((InternalEObject)refContent).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REF_EXPRESSION__REF_CONTENT, null, msgs);
			if (newRefContent != null)
				msgs = ((InternalEObject)newRefContent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.REF_EXPRESSION__REF_CONTENT, null, msgs);
			msgs = basicSetRefContent(newRefContent, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.REF_EXPRESSION__REF_CONTENT, newRefContent, newRefContent));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case MyDslPackage.REF_EXPRESSION__REF_NAME:
				return basicSetRefName(null, msgs);
			case MyDslPackage.REF_EXPRESSION__REF_CONTENT:
				return basicSetRefContent(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case MyDslPackage.REF_EXPRESSION__REF_NAME:
				return getRefName();
			case MyDslPackage.REF_EXPRESSION__REF_CONTENT:
				return getRefContent();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case MyDslPackage.REF_EXPRESSION__REF_NAME:
				setRefName((EmphasisExpression)newValue);
				return;
			case MyDslPackage.REF_EXPRESSION__REF_CONTENT:
				setRefContent((EmphasisExpression)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case MyDslPackage.REF_EXPRESSION__REF_NAME:
				setRefName((EmphasisExpression)null);
				return;
			case MyDslPackage.REF_EXPRESSION__REF_CONTENT:
				setRefContent((EmphasisExpression)null);
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case MyDslPackage.REF_EXPRESSION__REF_NAME:
				return refName != null;
			case MyDslPackage.REF_EXPRESSION__REF_CONTENT:
				return refContent != null;
		}
		return super.eIsSet(featureID);
	}

} //RefExpressionImpl
