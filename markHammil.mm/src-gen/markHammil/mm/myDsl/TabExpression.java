/**
 * generated by Xtext 2.12.0
 */
package markHammil.mm.myDsl;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Tab Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link markHammil.mm.myDsl.TabExpression#getHeader <em>Header</em>}</li>
 *   <li>{@link markHammil.mm.myDsl.TabExpression#getLines <em>Lines</em>}</li>
 * </ul>
 *
 * @see markHammil.mm.myDsl.MyDslPackage#getTabExpression()
 * @model
 * @generated
 */
public interface TabExpression extends TextExpression
{
  /**
	 * Returns the value of the '<em><b>Header</b></em>' containment reference.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Header</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Header</em>' containment reference.
	 * @see #setHeader(LineExpression)
	 * @see markHammil.mm.myDsl.MyDslPackage#getTabExpression_Header()
	 * @model containment="true"
	 * @generated
	 */
  LineExpression getHeader();

  /**
	 * Sets the value of the '{@link markHammil.mm.myDsl.TabExpression#getHeader <em>Header</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Header</em>' containment reference.
	 * @see #getHeader()
	 * @generated
	 */
  void setHeader(LineExpression value);

  /**
	 * Returns the value of the '<em><b>Lines</b></em>' containment reference list.
	 * The list contents are of type {@link markHammil.mm.myDsl.LineExpression}.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Lines</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Lines</em>' containment reference list.
	 * @see markHammil.mm.myDsl.MyDslPackage#getTabExpression_Lines()
	 * @model containment="true"
	 * @generated
	 */
  EList<LineExpression> getLines();

} // TabExpression
