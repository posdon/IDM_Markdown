/*
 * generated by Xtext 2.12.0
 */
package markHammil.mm.serializer;

import com.google.inject.Inject;
import java.util.List;
import markHammil.mm.services.MyDslGrammarAccess;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class MyDslSyntacticSequencer extends AbstractSyntacticSequencer {

	protected MyDslGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Expression_BLTerminalRuleCall_0_0_3_1_q;
	protected AbstractElementAlias match_Expression_BLTerminalRuleCall_0_0_4_1_q;
	protected AbstractElementAlias match_Expression_BLTerminalRuleCall_1_1_q;
	protected AbstractElementAlias match_Header1Expression_BLTerminalRuleCall_4_q;
	protected AbstractElementAlias match_Header1Expression_NumberSignKeyword_3_0_a;
	protected AbstractElementAlias match_Header2Expression_BLTerminalRuleCall_4_q;
	protected AbstractElementAlias match_Header2Expression_NumberSignKeyword_3_0_a;
	protected AbstractElementAlias match_Header3Expression_BLTerminalRuleCall_4_q;
	protected AbstractElementAlias match_Header3Expression_NumberSignKeyword_3_0_a;
	protected AbstractElementAlias match_Header4Expression_BLTerminalRuleCall_4_q;
	protected AbstractElementAlias match_Header4Expression_NumberSignKeyword_3_0_a;
	protected AbstractElementAlias match_Header5Expression_BLTerminalRuleCall_4_q;
	protected AbstractElementAlias match_Header5Expression_NumberSignKeyword_3_0_a;
	protected AbstractElementAlias match_Header6Expression_BLTerminalRuleCall_4_q;
	protected AbstractElementAlias match_Header6Expression_NumberSignKeyword_3_0_a;
	protected AbstractElementAlias match_HorizontalExpression_HyphenMinusKeyword_0_1_2_p;
	protected AbstractElementAlias match_HorizontalExpression__Keyword_1_2_p;
	protected AbstractElementAlias match_ImageExpression_BLTerminalRuleCall_6_q;
	protected AbstractElementAlias match_LineExpression_VerticalLineKeyword_0_q;
	protected AbstractElementAlias match_LineExpression_VerticalLineKeyword_3_q;
	protected AbstractElementAlias match_LinkExpression_BLTerminalRuleCall_6_q;
	protected AbstractElementAlias match_ListExpression_AsteriskKeyword_0_1_0_0_or_HyphenMinusKeyword_0_1_0_1_or_PlusSignKeyword_0_1_0_2;
	protected AbstractElementAlias match_ListExpression_BLTerminalRuleCall_0_1_3_q;
	protected AbstractElementAlias match_ListExpression_BLTerminalRuleCall_1_4_q;
	protected AbstractElementAlias match_ListExpression_WSTerminalRuleCall_0_1_1_p;
	protected AbstractElementAlias match_ListExpression_WSTerminalRuleCall_1_2_p;
	protected AbstractElementAlias match_QuoteExpression_BLTerminalRuleCall_3_q;
	protected AbstractElementAlias match_RefExpression_BLTerminalRuleCall_5_q;
	protected AbstractElementAlias match_VideoExpression_BLTerminalRuleCall_8_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (MyDslGrammarAccess) access;
		match_Expression_BLTerminalRuleCall_0_0_3_1_q = new TokenAlias(false, true, grammarAccess.getExpressionAccess().getBLTerminalRuleCall_0_0_3_1());
		match_Expression_BLTerminalRuleCall_0_0_4_1_q = new TokenAlias(false, true, grammarAccess.getExpressionAccess().getBLTerminalRuleCall_0_0_4_1());
		match_Expression_BLTerminalRuleCall_1_1_q = new TokenAlias(false, true, grammarAccess.getExpressionAccess().getBLTerminalRuleCall_1_1());
		match_Header1Expression_BLTerminalRuleCall_4_q = new TokenAlias(false, true, grammarAccess.getHeader1ExpressionAccess().getBLTerminalRuleCall_4());
		match_Header1Expression_NumberSignKeyword_3_0_a = new TokenAlias(true, true, grammarAccess.getHeader1ExpressionAccess().getNumberSignKeyword_3_0());
		match_Header2Expression_BLTerminalRuleCall_4_q = new TokenAlias(false, true, grammarAccess.getHeader2ExpressionAccess().getBLTerminalRuleCall_4());
		match_Header2Expression_NumberSignKeyword_3_0_a = new TokenAlias(true, true, grammarAccess.getHeader2ExpressionAccess().getNumberSignKeyword_3_0());
		match_Header3Expression_BLTerminalRuleCall_4_q = new TokenAlias(false, true, grammarAccess.getHeader3ExpressionAccess().getBLTerminalRuleCall_4());
		match_Header3Expression_NumberSignKeyword_3_0_a = new TokenAlias(true, true, grammarAccess.getHeader3ExpressionAccess().getNumberSignKeyword_3_0());
		match_Header4Expression_BLTerminalRuleCall_4_q = new TokenAlias(false, true, grammarAccess.getHeader4ExpressionAccess().getBLTerminalRuleCall_4());
		match_Header4Expression_NumberSignKeyword_3_0_a = new TokenAlias(true, true, grammarAccess.getHeader4ExpressionAccess().getNumberSignKeyword_3_0());
		match_Header5Expression_BLTerminalRuleCall_4_q = new TokenAlias(false, true, grammarAccess.getHeader5ExpressionAccess().getBLTerminalRuleCall_4());
		match_Header5Expression_NumberSignKeyword_3_0_a = new TokenAlias(true, true, grammarAccess.getHeader5ExpressionAccess().getNumberSignKeyword_3_0());
		match_Header6Expression_BLTerminalRuleCall_4_q = new TokenAlias(false, true, grammarAccess.getHeader6ExpressionAccess().getBLTerminalRuleCall_4());
		match_Header6Expression_NumberSignKeyword_3_0_a = new TokenAlias(true, true, grammarAccess.getHeader6ExpressionAccess().getNumberSignKeyword_3_0());
		match_HorizontalExpression_HyphenMinusKeyword_0_1_2_p = new TokenAlias(true, false, grammarAccess.getHorizontalExpressionAccess().getHyphenMinusKeyword_0_1_2());
		match_HorizontalExpression__Keyword_1_2_p = new TokenAlias(true, false, grammarAccess.getHorizontalExpressionAccess().get_Keyword_1_2());
		match_ImageExpression_BLTerminalRuleCall_6_q = new TokenAlias(false, true, grammarAccess.getImageExpressionAccess().getBLTerminalRuleCall_6());
		match_LineExpression_VerticalLineKeyword_0_q = new TokenAlias(false, true, grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_0());
		match_LineExpression_VerticalLineKeyword_3_q = new TokenAlias(false, true, grammarAccess.getLineExpressionAccess().getVerticalLineKeyword_3());
		match_LinkExpression_BLTerminalRuleCall_6_q = new TokenAlias(false, true, grammarAccess.getLinkExpressionAccess().getBLTerminalRuleCall_6());
		match_ListExpression_AsteriskKeyword_0_1_0_0_or_HyphenMinusKeyword_0_1_0_1_or_PlusSignKeyword_0_1_0_2 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getListExpressionAccess().getAsteriskKeyword_0_1_0_0()), new TokenAlias(false, false, grammarAccess.getListExpressionAccess().getHyphenMinusKeyword_0_1_0_1()), new TokenAlias(false, false, grammarAccess.getListExpressionAccess().getPlusSignKeyword_0_1_0_2()));
		match_ListExpression_BLTerminalRuleCall_0_1_3_q = new TokenAlias(false, true, grammarAccess.getListExpressionAccess().getBLTerminalRuleCall_0_1_3());
		match_ListExpression_BLTerminalRuleCall_1_4_q = new TokenAlias(false, true, grammarAccess.getListExpressionAccess().getBLTerminalRuleCall_1_4());
		match_ListExpression_WSTerminalRuleCall_0_1_1_p = new TokenAlias(true, false, grammarAccess.getListExpressionAccess().getWSTerminalRuleCall_0_1_1());
		match_ListExpression_WSTerminalRuleCall_1_2_p = new TokenAlias(true, false, grammarAccess.getListExpressionAccess().getWSTerminalRuleCall_1_2());
		match_QuoteExpression_BLTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getQuoteExpressionAccess().getBLTerminalRuleCall_3());
		match_RefExpression_BLTerminalRuleCall_5_q = new TokenAlias(false, true, grammarAccess.getRefExpressionAccess().getBLTerminalRuleCall_5());
		match_VideoExpression_BLTerminalRuleCall_8_q = new TokenAlias(false, true, grammarAccess.getVideoExpressionAccess().getBLTerminalRuleCall_8());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getBLRule())
			return getBLToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getINTRule())
			return getINTToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getTabSeparationRule())
			return getTabSeparationToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getWSRule())
			return getWSToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal BL: ('\r'? '\n');
	 */
	protected String getBLToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\n";
	}
	
	/**
	 * terminal INT returns ecore::EInt: ('0'..'9')+;
	 */
	protected String getINTToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * TabSeparation :
	 * 	'|'? '-' ('-')+ ( '|' '-' ('-')+ )+ '|'? 
	 * ;
	 */
	protected String getTabSeparationToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "--|--";
	}
	
	/**
	 * terminal WS: (' '|'\t');
	 */
	protected String getWSToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return " ";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Expression_BLTerminalRuleCall_0_0_3_1_q.equals(syntax))
				emit_Expression_BLTerminalRuleCall_0_0_3_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Expression_BLTerminalRuleCall_0_0_4_1_q.equals(syntax))
				emit_Expression_BLTerminalRuleCall_0_0_4_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Expression_BLTerminalRuleCall_1_1_q.equals(syntax))
				emit_Expression_BLTerminalRuleCall_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header1Expression_BLTerminalRuleCall_4_q.equals(syntax))
				emit_Header1Expression_BLTerminalRuleCall_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header1Expression_NumberSignKeyword_3_0_a.equals(syntax))
				emit_Header1Expression_NumberSignKeyword_3_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header2Expression_BLTerminalRuleCall_4_q.equals(syntax))
				emit_Header2Expression_BLTerminalRuleCall_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header2Expression_NumberSignKeyword_3_0_a.equals(syntax))
				emit_Header2Expression_NumberSignKeyword_3_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header3Expression_BLTerminalRuleCall_4_q.equals(syntax))
				emit_Header3Expression_BLTerminalRuleCall_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header3Expression_NumberSignKeyword_3_0_a.equals(syntax))
				emit_Header3Expression_NumberSignKeyword_3_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header4Expression_BLTerminalRuleCall_4_q.equals(syntax))
				emit_Header4Expression_BLTerminalRuleCall_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header4Expression_NumberSignKeyword_3_0_a.equals(syntax))
				emit_Header4Expression_NumberSignKeyword_3_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header5Expression_BLTerminalRuleCall_4_q.equals(syntax))
				emit_Header5Expression_BLTerminalRuleCall_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header5Expression_NumberSignKeyword_3_0_a.equals(syntax))
				emit_Header5Expression_NumberSignKeyword_3_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header6Expression_BLTerminalRuleCall_4_q.equals(syntax))
				emit_Header6Expression_BLTerminalRuleCall_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Header6Expression_NumberSignKeyword_3_0_a.equals(syntax))
				emit_Header6Expression_NumberSignKeyword_3_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HorizontalExpression_HyphenMinusKeyword_0_1_2_p.equals(syntax))
				emit_HorizontalExpression_HyphenMinusKeyword_0_1_2_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HorizontalExpression__Keyword_1_2_p.equals(syntax))
				emit_HorizontalExpression__Keyword_1_2_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ImageExpression_BLTerminalRuleCall_6_q.equals(syntax))
				emit_ImageExpression_BLTerminalRuleCall_6_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LineExpression_VerticalLineKeyword_0_q.equals(syntax))
				emit_LineExpression_VerticalLineKeyword_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LineExpression_VerticalLineKeyword_3_q.equals(syntax))
				emit_LineExpression_VerticalLineKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LinkExpression_BLTerminalRuleCall_6_q.equals(syntax))
				emit_LinkExpression_BLTerminalRuleCall_6_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ListExpression_AsteriskKeyword_0_1_0_0_or_HyphenMinusKeyword_0_1_0_1_or_PlusSignKeyword_0_1_0_2.equals(syntax))
				emit_ListExpression_AsteriskKeyword_0_1_0_0_or_HyphenMinusKeyword_0_1_0_1_or_PlusSignKeyword_0_1_0_2(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ListExpression_BLTerminalRuleCall_0_1_3_q.equals(syntax))
				emit_ListExpression_BLTerminalRuleCall_0_1_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ListExpression_BLTerminalRuleCall_1_4_q.equals(syntax))
				emit_ListExpression_BLTerminalRuleCall_1_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ListExpression_WSTerminalRuleCall_0_1_1_p.equals(syntax))
				emit_ListExpression_WSTerminalRuleCall_0_1_1_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ListExpression_WSTerminalRuleCall_1_2_p.equals(syntax))
				emit_ListExpression_WSTerminalRuleCall_1_2_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_QuoteExpression_BLTerminalRuleCall_3_q.equals(syntax))
				emit_QuoteExpression_BLTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RefExpression_BLTerminalRuleCall_5_q.equals(syntax))
				emit_RefExpression_BLTerminalRuleCall_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VideoExpression_BLTerminalRuleCall_8_q.equals(syntax))
				emit_VideoExpression_BLTerminalRuleCall_8_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     c=HorizontalExpression (ambiguity) (rule end)
	 */
	protected void emit_Expression_BLTerminalRuleCall_0_0_3_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     c=ListExpression (ambiguity) (rule end)
	 */
	protected void emit_Expression_BLTerminalRuleCall_0_0_4_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     c=TextExpression (ambiguity) (rule end)
	 */
	protected void emit_Expression_BLTerminalRuleCall_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_Header1Expression_BLTerminalRuleCall_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_Header1Expression_NumberSignKeyword_3_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_Header2Expression_BLTerminalRuleCall_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_Header2Expression_NumberSignKeyword_3_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_Header3Expression_BLTerminalRuleCall_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_Header3Expression_NumberSignKeyword_3_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_Header4Expression_BLTerminalRuleCall_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_Header4Expression_NumberSignKeyword_3_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_Header5Expression_BLTerminalRuleCall_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_Header5Expression_NumberSignKeyword_3_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression '#'* (ambiguity) (rule end)
	 */
	protected void emit_Header6Expression_BLTerminalRuleCall_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '#'*
	 *
	 * This ambiguous syntax occurs at:
	 *     title+=EmphasisExpression (ambiguity) BL? (rule end)
	 */
	protected void emit_Header6Expression_NumberSignKeyword_3_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '-'+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '-' '-' (ambiguity) (rule start)
	 */
	protected void emit_HorizontalExpression_HyphenMinusKeyword_0_1_2_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '_'+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '_' '_' (ambiguity) (rule start)
	 */
	protected void emit_HorizontalExpression__Keyword_1_2_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     altText=NaturalExpression '](' ')' (ambiguity) (rule end)
	 *     linkContent=NaturalExpression ')' (ambiguity) (rule end)
	 */
	protected void emit_ImageExpression_BLTerminalRuleCall_6_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '|'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) cells+=NaturalExpression
	 */
	protected void emit_LineExpression_VerticalLineKeyword_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '|'?
	 *
	 * This ambiguous syntax occurs at:
	 *     cells+=NaturalExpression (ambiguity) (rule end)
	 */
	protected void emit_LineExpression_VerticalLineKeyword_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     altText=NaturalExpression '](' ')' (ambiguity) (rule end)
	 *     linkContent=NaturalExpression ')' (ambiguity) (rule end)
	 */
	protected void emit_LinkExpression_BLTerminalRuleCall_6_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '*' | '-' | '+'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) WS+ contentUnordered+=TextExpression
	 *     contentUnordered+=TextExpression BL? (ambiguity) WS+ contentUnordered+=TextExpression
	 */
	protected void emit_ListExpression_AsteriskKeyword_0_1_0_0_or_HyphenMinusKeyword_0_1_0_1_or_PlusSignKeyword_0_1_0_2(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     contentUnordered+=TextExpression (ambiguity) ('*' | '-' | '+') WS+ contentUnordered+=TextExpression
	 *     contentUnordered+=TextExpression (ambiguity) (rule end)
	 */
	protected void emit_ListExpression_BLTerminalRuleCall_0_1_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     contentOrdered+=TextExpression (ambiguity) (rule end)
	 *     contentOrdered+=TextExpression (ambiguity) INT '.' WS+ contentOrdered+=TextExpression
	 */
	protected void emit_ListExpression_BLTerminalRuleCall_1_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ('*' | '-' | '+') (ambiguity) contentUnordered+=TextExpression
	 *     contentUnordered+=TextExpression BL? ('*' | '-' | '+') (ambiguity) contentUnordered+=TextExpression
	 */
	protected void emit_ListExpression_WSTerminalRuleCall_0_1_1_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) INT '.' (ambiguity) contentOrdered+=TextExpression
	 *     contentOrdered+=TextExpression BL? INT '.' (ambiguity) contentOrdered+=TextExpression
	 */
	protected void emit_ListExpression_WSTerminalRuleCall_1_2_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     content+=TextExpression (ambiguity) (rule end)
	 */
	protected void emit_QuoteExpression_BLTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     refContent=NaturalExpression (ambiguity) (rule end)
	 *     refName=NaturalExpression ']:' (ambiguity) (rule end)
	 */
	protected void emit_RefExpression_BLTerminalRuleCall_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     BL?
	 *
	 * This ambiguous syntax occurs at:
	 *     altText=NaturalExpression '](' ')](' ')' (ambiguity) (rule end)
	 *     linkImage=NaturalExpression ')](' ')' (ambiguity) (rule end)
	 *     linkVideo=NaturalExpression ')' (ambiguity) (rule end)
	 */
	protected void emit_VideoExpression_BLTerminalRuleCall_8_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
